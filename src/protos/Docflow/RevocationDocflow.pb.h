// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Docflow/RevocationDocflow.proto

#ifndef PROTOBUF_Docflow_2fRevocationDocflow_2eproto__INCLUDED
#define PROTOBUF_Docflow_2fRevocationDocflow_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Docflow/Attachment.pb.h"
#include "Docflow/RecipientSignatureDocflow.pb.h"
#include "Docflow/RecipientSignatureRejectionDocflow.pb.h"
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Docflow {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Docflow_2fRevocationDocflow_2eproto();
void protobuf_AssignDesc_Docflow_2fRevocationDocflow_2eproto();
void protobuf_ShutdownFile_Docflow_2fRevocationDocflow_2eproto();

class RevocationDocflow;

// ===================================================================

class RevocationDocflow : public ::google::protobuf::Message {
 public:
  RevocationDocflow();
  virtual ~RevocationDocflow();
  
  RevocationDocflow(const RevocationDocflow& from);
  
  inline RevocationDocflow& operator=(const RevocationDocflow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RevocationDocflow& default_instance();
  
  void Swap(RevocationDocflow* other);
  
  // implements Message ----------------------------------------------
  
  RevocationDocflow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RevocationDocflow& from);
  void MergeFrom(const RevocationDocflow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool IsFinished = 1;
  inline bool has_isfinished() const;
  inline void clear_isfinished();
  static const int kIsFinishedFieldNumber = 1;
  inline bool isfinished() const;
  inline void set_isfinished(bool value);
  
  // optional .Diadoc.Api.Proto.Docflow.SignedAttachment RevocationRequestAttachment = 2;
  inline bool has_revocationrequestattachment() const;
  inline void clear_revocationrequestattachment();
  static const int kRevocationRequestAttachmentFieldNumber = 2;
  inline const ::Diadoc::Api::Proto::Docflow::SignedAttachment& revocationrequestattachment() const;
  inline ::Diadoc::Api::Proto::Docflow::SignedAttachment* mutable_revocationrequestattachment();
  inline ::Diadoc::Api::Proto::Docflow::SignedAttachment* release_revocationrequestattachment();
  
  // optional .Diadoc.Api.Proto.Docflow.RecipientSignatureDocflow RecipientSignatureDocflow = 3;
  inline bool has_recipientsignaturedocflow() const;
  inline void clear_recipientsignaturedocflow();
  static const int kRecipientSignatureDocflowFieldNumber = 3;
  inline const ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow& recipientsignaturedocflow() const;
  inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow* mutable_recipientsignaturedocflow();
  inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow* release_recipientsignaturedocflow();
  
  // optional .Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflow RecipientSignatureRejectionDocflow = 4;
  inline bool has_recipientsignaturerejectiondocflow() const;
  inline void clear_recipientsignaturerejectiondocflow();
  static const int kRecipientSignatureRejectionDocflowFieldNumber = 4;
  inline const ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow& recipientsignaturerejectiondocflow() const;
  inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow* mutable_recipientsignaturerejectiondocflow();
  inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow* release_recipientsignaturerejectiondocflow();
  
  // optional string InitiatorBoxId = 5;
  inline bool has_initiatorboxid() const;
  inline void clear_initiatorboxid();
  static const int kInitiatorBoxIdFieldNumber = 5;
  inline const ::std::string& initiatorboxid() const;
  inline void set_initiatorboxid(const ::std::string& value);
  inline void set_initiatorboxid(const char* value);
  inline void set_initiatorboxid(const char* value, size_t size);
  inline ::std::string* mutable_initiatorboxid();
  inline ::std::string* release_initiatorboxid();
  
  // optional bool IsRevocationAccepted = 6;
  inline bool has_isrevocationaccepted() const;
  inline void clear_isrevocationaccepted();
  static const int kIsRevocationAcceptedFieldNumber = 6;
  inline bool isrevocationaccepted() const;
  inline void set_isrevocationaccepted(bool value);
  
  // optional bool IsRevocationRejected = 7;
  inline bool has_isrevocationrejected() const;
  inline void clear_isrevocationrejected();
  static const int kIsRevocationRejectedFieldNumber = 7;
  inline bool isrevocationrejected() const;
  inline void set_isrevocationrejected(bool value);
  
  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.Docflow.RevocationDocflow)
 private:
  inline void set_has_isfinished();
  inline void clear_has_isfinished();
  inline void set_has_revocationrequestattachment();
  inline void clear_has_revocationrequestattachment();
  inline void set_has_recipientsignaturedocflow();
  inline void clear_has_recipientsignaturedocflow();
  inline void set_has_recipientsignaturerejectiondocflow();
  inline void clear_has_recipientsignaturerejectiondocflow();
  inline void set_has_initiatorboxid();
  inline void clear_has_initiatorboxid();
  inline void set_has_isrevocationaccepted();
  inline void clear_has_isrevocationaccepted();
  inline void set_has_isrevocationrejected();
  inline void clear_has_isrevocationrejected();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::Diadoc::Api::Proto::Docflow::SignedAttachment* revocationrequestattachment_;
  ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow* recipientsignaturedocflow_;
  ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow* recipientsignaturerejectiondocflow_;
  ::std::string* initiatorboxid_;
  bool isfinished_;
  bool isrevocationaccepted_;
  bool isrevocationrejected_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_Docflow_2fRevocationDocflow_2eproto();
  friend void protobuf_AssignDesc_Docflow_2fRevocationDocflow_2eproto();
  friend void protobuf_ShutdownFile_Docflow_2fRevocationDocflow_2eproto();
  
  void InitAsDefaultInstance();
  static RevocationDocflow* default_instance_;
};
// ===================================================================


// ===================================================================

// RevocationDocflow

// optional bool IsFinished = 1;
inline bool RevocationDocflow::has_isfinished() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RevocationDocflow::set_has_isfinished() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RevocationDocflow::clear_has_isfinished() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RevocationDocflow::clear_isfinished() {
  isfinished_ = false;
  clear_has_isfinished();
}
inline bool RevocationDocflow::isfinished() const {
  return isfinished_;
}
inline void RevocationDocflow::set_isfinished(bool value) {
  set_has_isfinished();
  isfinished_ = value;
}

// optional .Diadoc.Api.Proto.Docflow.SignedAttachment RevocationRequestAttachment = 2;
inline bool RevocationDocflow::has_revocationrequestattachment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RevocationDocflow::set_has_revocationrequestattachment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RevocationDocflow::clear_has_revocationrequestattachment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RevocationDocflow::clear_revocationrequestattachment() {
  if (revocationrequestattachment_ != NULL) revocationrequestattachment_->::Diadoc::Api::Proto::Docflow::SignedAttachment::Clear();
  clear_has_revocationrequestattachment();
}
inline const ::Diadoc::Api::Proto::Docflow::SignedAttachment& RevocationDocflow::revocationrequestattachment() const {
  return revocationrequestattachment_ != NULL ? *revocationrequestattachment_ : *default_instance_->revocationrequestattachment_;
}
inline ::Diadoc::Api::Proto::Docflow::SignedAttachment* RevocationDocflow::mutable_revocationrequestattachment() {
  set_has_revocationrequestattachment();
  if (revocationrequestattachment_ == NULL) revocationrequestattachment_ = new ::Diadoc::Api::Proto::Docflow::SignedAttachment;
  return revocationrequestattachment_;
}
inline ::Diadoc::Api::Proto::Docflow::SignedAttachment* RevocationDocflow::release_revocationrequestattachment() {
  clear_has_revocationrequestattachment();
  ::Diadoc::Api::Proto::Docflow::SignedAttachment* temp = revocationrequestattachment_;
  revocationrequestattachment_ = NULL;
  return temp;
}

// optional .Diadoc.Api.Proto.Docflow.RecipientSignatureDocflow RecipientSignatureDocflow = 3;
inline bool RevocationDocflow::has_recipientsignaturedocflow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RevocationDocflow::set_has_recipientsignaturedocflow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RevocationDocflow::clear_has_recipientsignaturedocflow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RevocationDocflow::clear_recipientsignaturedocflow() {
  if (recipientsignaturedocflow_ != NULL) recipientsignaturedocflow_->::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow::Clear();
  clear_has_recipientsignaturedocflow();
}
inline const ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow& RevocationDocflow::recipientsignaturedocflow() const {
  return recipientsignaturedocflow_ != NULL ? *recipientsignaturedocflow_ : *default_instance_->recipientsignaturedocflow_;
}
inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow* RevocationDocflow::mutable_recipientsignaturedocflow() {
  set_has_recipientsignaturedocflow();
  if (recipientsignaturedocflow_ == NULL) recipientsignaturedocflow_ = new ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow;
  return recipientsignaturedocflow_;
}
inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow* RevocationDocflow::release_recipientsignaturedocflow() {
  clear_has_recipientsignaturedocflow();
  ::Diadoc::Api::Proto::Docflow::RecipientSignatureDocflow* temp = recipientsignaturedocflow_;
  recipientsignaturedocflow_ = NULL;
  return temp;
}

// optional .Diadoc.Api.Proto.Docflow.RecipientSignatureRejectionDocflow RecipientSignatureRejectionDocflow = 4;
inline bool RevocationDocflow::has_recipientsignaturerejectiondocflow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RevocationDocflow::set_has_recipientsignaturerejectiondocflow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RevocationDocflow::clear_has_recipientsignaturerejectiondocflow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RevocationDocflow::clear_recipientsignaturerejectiondocflow() {
  if (recipientsignaturerejectiondocflow_ != NULL) recipientsignaturerejectiondocflow_->::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow::Clear();
  clear_has_recipientsignaturerejectiondocflow();
}
inline const ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow& RevocationDocflow::recipientsignaturerejectiondocflow() const {
  return recipientsignaturerejectiondocflow_ != NULL ? *recipientsignaturerejectiondocflow_ : *default_instance_->recipientsignaturerejectiondocflow_;
}
inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow* RevocationDocflow::mutable_recipientsignaturerejectiondocflow() {
  set_has_recipientsignaturerejectiondocflow();
  if (recipientsignaturerejectiondocflow_ == NULL) recipientsignaturerejectiondocflow_ = new ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow;
  return recipientsignaturerejectiondocflow_;
}
inline ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow* RevocationDocflow::release_recipientsignaturerejectiondocflow() {
  clear_has_recipientsignaturerejectiondocflow();
  ::Diadoc::Api::Proto::Docflow::RecipientSignatureRejectionDocflow* temp = recipientsignaturerejectiondocflow_;
  recipientsignaturerejectiondocflow_ = NULL;
  return temp;
}

// optional string InitiatorBoxId = 5;
inline bool RevocationDocflow::has_initiatorboxid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RevocationDocflow::set_has_initiatorboxid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RevocationDocflow::clear_has_initiatorboxid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RevocationDocflow::clear_initiatorboxid() {
  if (initiatorboxid_ != &::google::protobuf::internal::kEmptyString) {
    initiatorboxid_->clear();
  }
  clear_has_initiatorboxid();
}
inline const ::std::string& RevocationDocflow::initiatorboxid() const {
  return *initiatorboxid_;
}
inline void RevocationDocflow::set_initiatorboxid(const ::std::string& value) {
  set_has_initiatorboxid();
  if (initiatorboxid_ == &::google::protobuf::internal::kEmptyString) {
    initiatorboxid_ = new ::std::string;
  }
  initiatorboxid_->assign(value);
}
inline void RevocationDocflow::set_initiatorboxid(const char* value) {
  set_has_initiatorboxid();
  if (initiatorboxid_ == &::google::protobuf::internal::kEmptyString) {
    initiatorboxid_ = new ::std::string;
  }
  initiatorboxid_->assign(value);
}
inline void RevocationDocflow::set_initiatorboxid(const char* value, size_t size) {
  set_has_initiatorboxid();
  if (initiatorboxid_ == &::google::protobuf::internal::kEmptyString) {
    initiatorboxid_ = new ::std::string;
  }
  initiatorboxid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RevocationDocflow::mutable_initiatorboxid() {
  set_has_initiatorboxid();
  if (initiatorboxid_ == &::google::protobuf::internal::kEmptyString) {
    initiatorboxid_ = new ::std::string;
  }
  return initiatorboxid_;
}
inline ::std::string* RevocationDocflow::release_initiatorboxid() {
  clear_has_initiatorboxid();
  if (initiatorboxid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = initiatorboxid_;
    initiatorboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool IsRevocationAccepted = 6;
inline bool RevocationDocflow::has_isrevocationaccepted() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RevocationDocflow::set_has_isrevocationaccepted() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RevocationDocflow::clear_has_isrevocationaccepted() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RevocationDocflow::clear_isrevocationaccepted() {
  isrevocationaccepted_ = false;
  clear_has_isrevocationaccepted();
}
inline bool RevocationDocflow::isrevocationaccepted() const {
  return isrevocationaccepted_;
}
inline void RevocationDocflow::set_isrevocationaccepted(bool value) {
  set_has_isrevocationaccepted();
  isrevocationaccepted_ = value;
}

// optional bool IsRevocationRejected = 7;
inline bool RevocationDocflow::has_isrevocationrejected() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RevocationDocflow::set_has_isrevocationrejected() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RevocationDocflow::clear_has_isrevocationrejected() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RevocationDocflow::clear_isrevocationrejected() {
  isrevocationrejected_ = false;
  clear_has_isrevocationrejected();
}
inline bool RevocationDocflow::isrevocationrejected() const {
  return isrevocationrejected_;
}
inline void RevocationDocflow::set_isrevocationrejected(bool value) {
  set_has_isrevocationrejected();
  isrevocationrejected_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Docflow
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Docflow_2fRevocationDocflow_2eproto__INCLUDED
