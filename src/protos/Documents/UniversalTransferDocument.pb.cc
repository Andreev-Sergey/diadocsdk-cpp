// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Documents/UniversalTransferDocument.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Documents/UniversalTransferDocument.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Documents {
namespace UniversalTransferDocument {

namespace {

const ::google::protobuf::Descriptor* UniversalTransferDocumentMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UniversalTransferDocumentMetadata_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UniversalTransferDocumentStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Documents_2fUniversalTransferDocument_2eproto() {
  protobuf_AddDesc_Documents_2fUniversalTransferDocument_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Documents/UniversalTransferDocument.proto");
  GOOGLE_CHECK(file != NULL);
  UniversalTransferDocumentMetadata_descriptor_ = file->message_type(0);
  static const int UniversalTransferDocumentMetadata_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, documentstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, grounds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, documentfunction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, receiptstatus_),
  };
  UniversalTransferDocumentMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UniversalTransferDocumentMetadata_descriptor_,
      UniversalTransferDocumentMetadata::default_instance_,
      UniversalTransferDocumentMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UniversalTransferDocumentMetadata));
  UniversalTransferDocumentStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Documents_2fUniversalTransferDocument_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UniversalTransferDocumentMetadata_descriptor_, &UniversalTransferDocumentMetadata::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Documents_2fUniversalTransferDocument_2eproto() {
  delete UniversalTransferDocumentMetadata::default_instance_;
  delete UniversalTransferDocumentMetadata_reflection_;
}

void protobuf_AddDesc_Documents_2fUniversalTransferDocument_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::Documents::protobuf_AddDesc_Documents_2fReceiptStatus_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)Documents/UniversalTransferDocument.pr"
    "oto\0224Diadoc.Api.Proto.Documents.Universa"
    "lTransferDocument\032\035Documents/ReceiptStat"
    "us.proto\"\333\002\n!UniversalTransferDocumentMe"
    "tadata\022\204\001\n\016DocumentStatus\030\001 \001(\0162U.Diadoc"
    ".Api.Proto.Documents.UniversalTransferDo"
    "cument.UniversalTransferDocumentStatus:\025"
    "UnknownDocumentStatus\022\r\n\005Total\030\002 \002(\t\022\013\n\003"
    "Vat\030\003 \001(\t\022\017\n\007Grounds\030\004 \001(\t\022\030\n\020DocumentFu"
    "nction\030\005 \002(\t\022\020\n\010Currency\030\006 \002(\005\022V\n\rReceip"
    "tStatus\030\007 \001(\0162).Diadoc.Api.Proto.Documen"
    "ts.ReceiptStatus:\024UnknownReceiptStatus*\343"
    "\003\n\037UniversalTransferDocumentStatus\022\031\n\025Un"
    "knownDocumentStatus\020\000\022%\n!OutboundWaiting"
    "ForSenderSignature\020\001\0229\n5OutboundWaitingF"
    "orInvoiceReceiptAndRecipientSignature\020\002\022"
    "$\n OutboundWaitingForInvoiceReceipt\020\003\022(\n"
    "$OutboundWaitingForRecipientSignature\020\004\022"
    "\"\n\036OutboundInvalidSenderSignature\020\005\0228\n4I"
    "nboundWaitingForInvoiceReceiptAndRecipie"
    "ntSignature\020\006\022\'\n#InboundWaitingForRecipi"
    "entSignature\020\007\022#\n\037InboundWaitingForInvoi"
    "ceReceipt\020\010\022!\n\035InboundWithRecipientSigna"
    "ture\020\t\022$\n InboundInvalidRecipientSignatu"
    "re\020\n", 964);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Documents/UniversalTransferDocument.proto", &protobuf_RegisterTypes);
  UniversalTransferDocumentMetadata::default_instance_ = new UniversalTransferDocumentMetadata();
  UniversalTransferDocumentMetadata::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Documents_2fUniversalTransferDocument_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Documents_2fUniversalTransferDocument_2eproto {
  StaticDescriptorInitializer_Documents_2fUniversalTransferDocument_2eproto() {
    protobuf_AddDesc_Documents_2fUniversalTransferDocument_2eproto();
  }
} static_descriptor_initializer_Documents_2fUniversalTransferDocument_2eproto_;
const ::google::protobuf::EnumDescriptor* UniversalTransferDocumentStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UniversalTransferDocumentStatus_descriptor_;
}
bool UniversalTransferDocumentStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int UniversalTransferDocumentMetadata::kDocumentStatusFieldNumber;
const int UniversalTransferDocumentMetadata::kTotalFieldNumber;
const int UniversalTransferDocumentMetadata::kVatFieldNumber;
const int UniversalTransferDocumentMetadata::kGroundsFieldNumber;
const int UniversalTransferDocumentMetadata::kDocumentFunctionFieldNumber;
const int UniversalTransferDocumentMetadata::kCurrencyFieldNumber;
const int UniversalTransferDocumentMetadata::kReceiptStatusFieldNumber;
#endif  // !_MSC_VER

UniversalTransferDocumentMetadata::UniversalTransferDocumentMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
}

void UniversalTransferDocumentMetadata::InitAsDefaultInstance() {
}

UniversalTransferDocumentMetadata::UniversalTransferDocumentMetadata(const UniversalTransferDocumentMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
}

void UniversalTransferDocumentMetadata::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  documentstatus_ = 0;
  total_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  grounds_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentfunction_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_ = 0;
  receiptstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UniversalTransferDocumentMetadata::~UniversalTransferDocumentMetadata() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  SharedDtor();
}

void UniversalTransferDocumentMetadata::SharedDtor() {
  if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete total_;
  }
  if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vat_;
  }
  if (grounds_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete grounds_;
  }
  if (documentfunction_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentfunction_;
  }
  if (this != default_instance_) {
  }
}

void UniversalTransferDocumentMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UniversalTransferDocumentMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UniversalTransferDocumentMetadata_descriptor_;
}

const UniversalTransferDocumentMetadata& UniversalTransferDocumentMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fUniversalTransferDocument_2eproto();
  return *default_instance_;
}

UniversalTransferDocumentMetadata* UniversalTransferDocumentMetadata::default_instance_ = NULL;

UniversalTransferDocumentMetadata* UniversalTransferDocumentMetadata::New() const {
  return new UniversalTransferDocumentMetadata;
}

void UniversalTransferDocumentMetadata::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UniversalTransferDocumentMetadata*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(documentstatus_, currency_);
    if (has_total()) {
      if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        total_->clear();
      }
    }
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        vat_->clear();
      }
    }
    if (has_grounds()) {
      if (grounds_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        grounds_->clear();
      }
    }
    if (has_documentfunction()) {
      if (documentfunction_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentfunction_->clear();
      }
    }
    receiptstatus_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UniversalTransferDocumentMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentStatus DocumentStatus = 1 [default = UnknownDocumentStatus];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentStatus_IsValid(value)) {
            set_documentstatus(static_cast< ::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Total;
        break;
      }

      // required string Total = 2;
      case 2: {
        if (tag == 18) {
         parse_Total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->total().data(), this->total().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "total");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Vat;
        break;
      }

      // optional string Vat = 3;
      case 3: {
        if (tag == 26) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Grounds;
        break;
      }

      // optional string Grounds = 4;
      case 4: {
        if (tag == 34) {
         parse_Grounds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grounds()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->grounds().data(), this->grounds().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "grounds");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_DocumentFunction;
        break;
      }

      // required string DocumentFunction = 5;
      case 5: {
        if (tag == 42) {
         parse_DocumentFunction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentfunction()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentfunction().data(), this->documentfunction().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentfunction");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Currency;
        break;
      }

      // required int32 Currency = 6;
      case 6: {
        if (tag == 48) {
         parse_Currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ReceiptStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.ReceiptStatus ReceiptStatus = 7 [default = UnknownReceiptStatus];
      case 7: {
        if (tag == 56) {
         parse_ReceiptStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::ReceiptStatus_IsValid(value)) {
            set_receiptstatus(static_cast< ::Diadoc::Api::Proto::Documents::ReceiptStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  return false;
#undef DO_
}

void UniversalTransferDocumentMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentStatus DocumentStatus = 1 [default = UnknownDocumentStatus];
  if (has_documentstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->documentstatus(), output);
  }

  // required string Total = 2;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->total(), output);
  }

  // optional string Vat = 3;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vat(), output);
  }

  // optional string Grounds = 4;
  if (has_grounds()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->grounds().data(), this->grounds().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "grounds");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->grounds(), output);
  }

  // required string DocumentFunction = 5;
  if (has_documentfunction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentfunction().data(), this->documentfunction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentfunction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->documentfunction(), output);
  }

  // required int32 Currency = 6;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->currency(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.ReceiptStatus ReceiptStatus = 7 [default = UnknownReceiptStatus];
  if (has_receiptstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->receiptstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
}

::google::protobuf::uint8* UniversalTransferDocumentMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentStatus DocumentStatus = 1 [default = UnknownDocumentStatus];
  if (has_documentstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->documentstatus(), target);
  }

  // required string Total = 2;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->total(), target);
  }

  // optional string Vat = 3;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vat(), target);
  }

  // optional string Grounds = 4;
  if (has_grounds()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->grounds().data(), this->grounds().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "grounds");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->grounds(), target);
  }

  // required string DocumentFunction = 5;
  if (has_documentfunction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentfunction().data(), this->documentfunction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentfunction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->documentfunction(), target);
  }

  // required int32 Currency = 6;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->currency(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.ReceiptStatus ReceiptStatus = 7 [default = UnknownReceiptStatus];
  if (has_receiptstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->receiptstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata)
  return target;
}

int UniversalTransferDocumentMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentStatus DocumentStatus = 1 [default = UnknownDocumentStatus];
    if (has_documentstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->documentstatus());
    }

    // required string Total = 2;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->total());
    }

    // optional string Vat = 3;
    if (has_vat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

    // optional string Grounds = 4;
    if (has_grounds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->grounds());
    }

    // required string DocumentFunction = 5;
    if (has_documentfunction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentfunction());
    }

    // required int32 Currency = 6;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // optional .Diadoc.Api.Proto.Documents.ReceiptStatus ReceiptStatus = 7 [default = UnknownReceiptStatus];
    if (has_receiptstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receiptstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniversalTransferDocumentMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UniversalTransferDocumentMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UniversalTransferDocumentMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UniversalTransferDocumentMetadata::MergeFrom(const UniversalTransferDocumentMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_documentstatus()) {
      set_documentstatus(from.documentstatus());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
    if (from.has_vat()) {
      set_vat(from.vat());
    }
    if (from.has_grounds()) {
      set_grounds(from.grounds());
    }
    if (from.has_documentfunction()) {
      set_documentfunction(from.documentfunction());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_receiptstatus()) {
      set_receiptstatus(from.receiptstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UniversalTransferDocumentMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniversalTransferDocumentMetadata::CopyFrom(const UniversalTransferDocumentMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniversalTransferDocumentMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000032) != 0x00000032) return false;

  return true;
}

void UniversalTransferDocumentMetadata::Swap(UniversalTransferDocumentMetadata* other) {
  if (other != this) {
    std::swap(documentstatus_, other->documentstatus_);
    std::swap(total_, other->total_);
    std::swap(vat_, other->vat_);
    std::swap(grounds_, other->grounds_);
    std::swap(documentfunction_, other->documentfunction_);
    std::swap(currency_, other->currency_);
    std::swap(receiptstatus_, other->receiptstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UniversalTransferDocumentMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UniversalTransferDocumentMetadata_descriptor_;
  metadata.reflection = UniversalTransferDocumentMetadata_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace UniversalTransferDocument
}  // namespace Documents
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
