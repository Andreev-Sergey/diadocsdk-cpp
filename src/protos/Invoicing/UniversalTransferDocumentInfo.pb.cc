// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Invoicing/UniversalTransferDocumentInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Invoicing/UniversalTransferDocumentInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Invoicing {

namespace {

const ::google::protobuf::Descriptor* UniversalTransferDocumentSellerTitleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UniversalTransferDocumentSellerTitleInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shipper_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shipper_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvoiceTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvoiceTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExtendedInvoiceItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtendedInvoiceItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferBase_reflection_ = NULL;
const ::google::protobuf::Descriptor* Waybill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Waybill_reflection_ = NULL;
const ::google::protobuf::Descriptor* Employee_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Employee_reflection_ = NULL;
const ::google::protobuf::Descriptor* OtherIssuer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OtherIssuer_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdditionalInfoId_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdditionalInfoId_reflection_ = NULL;
const ::google::protobuf::Descriptor* UniversalTransferDocumentBuyerTitleInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UniversalTransferDocumentBuyerTitleInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FunctionType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ItemMark_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto() {
  protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Invoicing/UniversalTransferDocumentInfo.proto");
  GOOGLE_CHECK(file != NULL);
  UniversalTransferDocumentSellerTitleInfo_descriptor_ = file->message_type(0);
  static const int UniversalTransferDocumentSellerTitleInfo_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, documentname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, documentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, documentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, seller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, buyer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, shipper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, consignee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, signers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, paymentdocuments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, invoicetable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, currencyrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, revisiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, revisionnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, additionalinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, transferinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, documentcreator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, documentcreatorbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, govermentcontractinfo_),
  };
  UniversalTransferDocumentSellerTitleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UniversalTransferDocumentSellerTitleInfo_descriptor_,
      UniversalTransferDocumentSellerTitleInfo::default_instance_,
      UniversalTransferDocumentSellerTitleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentSellerTitleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UniversalTransferDocumentSellerTitleInfo));
  Shipper_descriptor_ = file->message_type(1);
  static const int Shipper_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipper, sameasseller_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipper, orginfo_),
  };
  Shipper_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Shipper_descriptor_,
      Shipper::default_instance_,
      Shipper_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipper, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shipper, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Shipper));
  InvoiceTable_descriptor_ = file->message_type(2);
  static const int InvoiceTable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, totalwithvatexcluded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, totalnet_),
  };
  InvoiceTable_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvoiceTable_descriptor_,
      InvoiceTable::default_instance_,
      InvoiceTable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceTable, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvoiceTable));
  ExtendedInvoiceItem_descriptor_ = file->message_type(3);
  static const int ExtendedInvoiceItem_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, product_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, unitname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, excise_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, taxrate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, subtotalwithvatexcluded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, subtotal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, customsdeclarations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, itemmark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, additionalproperty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, itemvendorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, itemtorelease_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, itemaccountdebit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, itemaccountcredit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, additionalinfo_),
  };
  ExtendedInvoiceItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExtendedInvoiceItem_descriptor_,
      ExtendedInvoiceItem::default_instance_,
      ExtendedInvoiceItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedInvoiceItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExtendedInvoiceItem));
  TransferInfo_descriptor_ = file->message_type(4);
  static const int TransferInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, operationinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, operationtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, transferdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, transferbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, transfertextinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, waybill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, carrier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, employee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, otherissuer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, createdthingtransferdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, createdthinginfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, additionalinfoid_),
  };
  TransferInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TransferInfo_descriptor_,
      TransferInfo::default_instance_,
      TransferInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TransferInfo));
  TransferBase_descriptor_ = file->message_type(5);
  static const int TransferBase_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferBase, basedocumentname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferBase, basedocumentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferBase, basedocumentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferBase, basedocumentinfo_),
  };
  TransferBase_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TransferBase_descriptor_,
      TransferBase::default_instance_,
      TransferBase_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferBase, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferBase, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TransferBase));
  Waybill_descriptor_ = file->message_type(6);
  static const int Waybill_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Waybill, transferdocumentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Waybill, transferdocumentdate_),
  };
  Waybill_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Waybill_descriptor_,
      Waybill::default_instance_,
      Waybill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Waybill, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Waybill, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Waybill));
  Employee_descriptor_ = file->message_type(7);
  static const int Employee_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, employeeposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, employeeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, employeebase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, transfersurname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, transferfirstname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, transferpatronymic_),
  };
  Employee_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Employee_descriptor_,
      Employee::default_instance_,
      Employee_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Employee, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Employee));
  OtherIssuer_descriptor_ = file->message_type(8);
  static const int OtherIssuer_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferemployeeposition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferemployeeinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferorganizationname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferorganizationbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferemployeebase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transfersurname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferfirstname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, transferpatronymic_),
  };
  OtherIssuer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OtherIssuer_descriptor_,
      OtherIssuer::default_instance_,
      OtherIssuer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherIssuer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OtherIssuer));
  AdditionalInfoId_descriptor_ = file->message_type(9);
  static const int AdditionalInfoId_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdditionalInfoId, infofileid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdditionalInfoId, additionalinfo_),
  };
  AdditionalInfoId_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdditionalInfoId_descriptor_,
      AdditionalInfoId::default_instance_,
      AdditionalInfoId_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdditionalInfoId, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdditionalInfoId, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdditionalInfoId));
  UniversalTransferDocumentBuyerTitleInfo_descriptor_ = file->message_type(10);
  static const int UniversalTransferDocumentBuyerTitleInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, documentcreator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, documentcreatorbase_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, operationcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, operationcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, acceptancedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, employee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, otherissuer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, additionalinfoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, signers_),
  };
  UniversalTransferDocumentBuyerTitleInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UniversalTransferDocumentBuyerTitleInfo_descriptor_,
      UniversalTransferDocumentBuyerTitleInfo::default_instance_,
      UniversalTransferDocumentBuyerTitleInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UniversalTransferDocumentBuyerTitleInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UniversalTransferDocumentBuyerTitleInfo));
  FunctionType_descriptor_ = file->enum_type(0);
  ItemMark_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UniversalTransferDocumentSellerTitleInfo_descriptor_, &UniversalTransferDocumentSellerTitleInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Shipper_descriptor_, &Shipper::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvoiceTable_descriptor_, &InvoiceTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExtendedInvoiceItem_descriptor_, &ExtendedInvoiceItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TransferInfo_descriptor_, &TransferInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TransferBase_descriptor_, &TransferBase::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Waybill_descriptor_, &Waybill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Employee_descriptor_, &Employee::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OtherIssuer_descriptor_, &OtherIssuer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdditionalInfoId_descriptor_, &AdditionalInfoId::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UniversalTransferDocumentBuyerTitleInfo_descriptor_, &UniversalTransferDocumentBuyerTitleInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Invoicing_2fUniversalTransferDocumentInfo_2eproto() {
  delete UniversalTransferDocumentSellerTitleInfo::default_instance_;
  delete UniversalTransferDocumentSellerTitleInfo_reflection_;
  delete Shipper::default_instance_;
  delete Shipper_reflection_;
  delete InvoiceTable::default_instance_;
  delete InvoiceTable_reflection_;
  delete ExtendedInvoiceItem::default_instance_;
  delete ExtendedInvoiceItem_reflection_;
  delete TransferInfo::default_instance_;
  delete TransferInfo_reflection_;
  delete TransferBase::default_instance_;
  delete TransferBase_reflection_;
  delete Waybill::default_instance_;
  delete Waybill_reflection_;
  delete Employee::default_instance_;
  delete Employee_reflection_;
  delete OtherIssuer::default_instance_;
  delete OtherIssuer_reflection_;
  delete AdditionalInfoId::default_instance_;
  delete AdditionalInfoId_reflection_;
  delete UniversalTransferDocumentBuyerTitleInfo::default_instance_;
  delete UniversalTransferDocumentBuyerTitleInfo_reflection_;
}

void protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::Invoicing::protobuf_AddDesc_Invoicing_2fInvoiceInfo_2eproto();
  ::Diadoc::Api::Proto::Invoicing::Signers::protobuf_AddDesc_Invoicing_2fExtendedSigner_2eproto();
  ::Diadoc::Api::Proto::Invoicing::Organizations::protobuf_AddDesc_Invoicing_2fExtendedOrganizationInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n-Invoicing/UniversalTransferDocumentInf"
    "o.proto\022\032Diadoc.Api.Proto.Invoicing\032\033Inv"
    "oicing/InvoiceInfo.proto\032\036Invoicing/Exte"
    "ndedSigner.proto\032(Invoicing/ExtendedOrga"
    "nizationInfo.proto\"\341\007\n(UniversalTransfer"
    "DocumentSellerTitleInfo\022:\n\010Function\030\001 \002("
    "\0162(.Diadoc.Api.Proto.Invoicing.FunctionT"
    "ype\022\024\n\014DocumentName\030\002 \001(\t\022\024\n\014DocumentDat"
    "e\030\003 \002(\t\022\026\n\016DocumentNumber\030\004 \002(\t\022R\n\006Selle"
    "r\030\005 \002(\0132B.Diadoc.Api.Proto.Invoicing.Org"
    "anizations.ExtendedOrganizationInfo\022Q\n\005B"
    "uyer\030\006 \002(\0132B.Diadoc.Api.Proto.Invoicing."
    "Organizations.ExtendedOrganizationInfo\0224"
    "\n\007Shipper\030\007 \001(\0132#.Diadoc.Api.Proto.Invoi"
    "cing.Shipper\022U\n\tConsignee\030\010 \001(\0132B.Diadoc"
    ".Api.Proto.Invoicing.Organizations.Exten"
    "dedOrganizationInfo\022C\n\007Signers\030\t \003(\01322.D"
    "iadoc.Api.Proto.Invoicing.Signers.Extend"
    "edSigner\022I\n\020PaymentDocuments\030\n \003(\0132/.Dia"
    "doc.Api.Proto.Invoicing.PaymentDocumentI"
    "nfo\022>\n\014InvoiceTable\030\013 \001(\0132(.Diadoc.Api.P"
    "roto.Invoicing.InvoiceTable\022\020\n\010Currency\030"
    "\014 \002(\t\022\024\n\014CurrencyRate\030\r \001(\t\022\024\n\014RevisionD"
    "ate\030\016 \001(\t\022\026\n\016RevisionNumber\030\017 \001(\t\022F\n\020Add"
    "itionalInfoId\030\020 \001(\0132,.Diadoc.Api.Proto.I"
    "nvoicing.AdditionalInfoId\022>\n\014TransferInf"
    "o\030\021 \001(\0132(.Diadoc.Api.Proto.Invoicing.Tra"
    "nsferInfo\022\027\n\017DocumentCreator\030\022 \002(\t\022\033\n\023Do"
    "cumentCreatorBase\030\023 \001(\t\022\035\n\025GovermentCont"
    "ractInfo\030\024 \001(\t\"t\n\007Shipper\022\024\n\014SameAsSelle"
    "r\030\001 \001(\010\022S\n\007OrgInfo\030\002 \001(\0132B.Diadoc.Api.Pr"
    "oto.Invoicing.Organizations.ExtendedOrga"
    "nizationInfo\"\232\001\n\014InvoiceTable\022>\n\005Items\030\001"
    " \003(\0132/.Diadoc.Api.Proto.Invoicing.Extend"
    "edInvoiceItem\022\034\n\024TotalWithVatExcluded\030\002 "
    "\001(\t\022\013\n\003Vat\030\003 \002(\t\022\r\n\005Total\030\004 \002(\t\022\020\n\010Total"
    "Net\030\005 \001(\t\"\266\004\n\023ExtendedInvoiceItem\022\017\n\007Pro"
    "duct\030\001 \002(\t\022\014\n\004Unit\030\002 \001(\t\022\020\n\010UnitName\030\003 \001"
    "(\t\022\020\n\010Quantity\030\004 \001(\t\022\r\n\005Price\030\005 \001(\t\022\016\n\006E"
    "xcise\030\006 \001(\t\0224\n\007TaxRate\030\007 \002(\0162#.Diadoc.Ap"
    "i.Proto.Invoicing.TaxRate\022\037\n\027SubtotalWit"
    "hVatExcluded\030\010 \001(\t\022\013\n\003Vat\030\t \001(\t\022\020\n\010Subto"
    "tal\030\n \002(\t\022K\n\023CustomsDeclarations\030\013 \003(\0132."
    ".Diadoc.Api.Proto.Invoicing.CustomsDecla"
    "ration\0226\n\010ItemMark\030\014 \001(\0162$.Diadoc.Api.Pr"
    "oto.Invoicing.ItemMark\022\032\n\022AdditionalProp"
    "erty\030\r \001(\t\022\026\n\016ItemVendorCode\030\016 \001(\t\022\025\n\rIt"
    "emToRelease\030\017 \001(\t\022\030\n\020ItemAccountDebit\030\020 "
    "\001(\t\022\031\n\021ItemAccountCredit\030\021 \001(\t\022B\n\016Additi"
    "onalInfo\030\022 \003(\0132*.Diadoc.Api.Proto.Invoic"
    "ing.AdditionalInfo\"\261\004\n\014TransferInfo\022\025\n\rO"
    "perationInfo\030\001 \002(\t\022\025\n\rOperationType\030\002 \001("
    "\t\022\024\n\014TransferDate\030\003 \001(\t\022>\n\014TransferBase\030"
    "\004 \003(\0132(.Diadoc.Api.Proto.Invoicing.Trans"
    "ferBase\022\030\n\020TransferTextInfo\030\005 \001(\t\0224\n\007Way"
    "bill\030\006 \003(\0132#.Diadoc.Api.Proto.Invoicing."
    "Waybill\022S\n\007Carrier\030\007 \001(\0132B.Diadoc.Api.Pr"
    "oto.Invoicing.Organizations.ExtendedOrga"
    "nizationInfo\0226\n\010Employee\030\010 \001(\0132$.Diadoc."
    "Api.Proto.Invoicing.Employee\022<\n\013OtherIss"
    "uer\030\t \001(\0132\'.Diadoc.Api.Proto.Invoicing.O"
    "therIssuer\022 \n\030CreatedThingTransferDate\030\n"
    " \001(\t\022\030\n\020CreatedThingInfo\030\013 \001(\t\022F\n\020Additi"
    "onalInfoId\030\014 \001(\0132,.Diadoc.Api.Proto.Invo"
    "icing.AdditionalInfoId\"x\n\014TransferBase\022\030"
    "\n\020BaseDocumentName\030\001 \002(\t\022\032\n\022BaseDocument"
    "Number\030\002 \001(\t\022\030\n\020BaseDocumentDate\030\003 \001(\t\022\030"
    "\n\020BaseDocumentInfo\030\004 \001(\t\"G\n\007Waybill\022\036\n\026T"
    "ransferDocumentNumber\030\001 \002(\t\022\034\n\024TransferD"
    "ocumentDate\030\002 \002(\t\"\240\001\n\010Employee\022\030\n\020Employ"
    "eePosition\030\001 \002(\t\022\024\n\014EmployeeInfo\030\002 \001(\t\022\024"
    "\n\014EmployeeBase\030\003 \001(\t\022\027\n\017TransferSurname\030"
    "\004 \002(\t\022\031\n\021TransferFirstName\030\005 \002(\t\022\032\n\022Tran"
    "sferPatronymic\030\006 \001(\t\"\377\001\n\013OtherIssuer\022 \n\030"
    "TransferEmployeePosition\030\001 \001(\t\022\034\n\024Transf"
    "erEmployeeInfo\030\002 \001(\t\022 \n\030TransferOrganiza"
    "tionName\030\003 \001(\t\022 \n\030TransferOrganizationBa"
    "se\030\004 \001(\t\022\034\n\024TransferEmployeeBase\030\005 \001(\t\022\027"
    "\n\017TransferSurname\030\006 \002(\t\022\031\n\021TransferFirst"
    "Name\030\007 \002(\t\022\032\n\022TransferPatronymic\030\010 \001(\t\"j"
    "\n\020AdditionalInfoId\022\022\n\nInfoFileId\030\001 \001(\t\022B"
    "\n\016AdditionalInfo\030\002 \003(\0132*.Diadoc.Api.Prot"
    "o.Invoicing.AdditionalInfo\"\253\003\n\'Universal"
    "TransferDocumentBuyerTitleInfo\022\027\n\017Docume"
    "ntCreator\030\001 \002(\t\022\033\n\023DocumentCreatorBase\030\002"
    " \001(\t\022\025\n\rOperationCode\030\003 \001(\t\022\030\n\020Operation"
    "Content\030\004 \002(\t\022\026\n\016AcceptanceDate\030\005 \001(\t\0226\n"
    "\010Employee\030\006 \001(\0132$.Diadoc.Api.Proto.Invoi"
    "cing.Employee\022<\n\013OtherIssuer\030\007 \001(\0132\'.Dia"
    "doc.Api.Proto.Invoicing.OtherIssuer\022F\n\020A"
    "dditionalInfoId\030\010 \001(\0132,.Diadoc.Api.Proto"
    ".Invoicing.AdditionalInfoId\022C\n\007Signers\030\t"
    " \003(\01322.Diadoc.Api.Proto.Invoicing.Signer"
    "s.ExtendedSigner*;\n\014FunctionType\022\013\n\007Invo"
    "ice\020\000\022\t\n\005Basic\020\001\022\023\n\017InvoiceAndBasic\020\002*_\n"
    "\010ItemMark\022\020\n\014NotSpecified\020\000\022\014\n\010Property\020"
    "\001\022\007\n\003Job\020\002\022\013\n\007Service\020\003\022\022\n\016PropertyRight"
    "s\020\004\022\t\n\005Other\020\005", 3894);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Invoicing/UniversalTransferDocumentInfo.proto", &protobuf_RegisterTypes);
  UniversalTransferDocumentSellerTitleInfo::default_instance_ = new UniversalTransferDocumentSellerTitleInfo();
  Shipper::default_instance_ = new Shipper();
  InvoiceTable::default_instance_ = new InvoiceTable();
  ExtendedInvoiceItem::default_instance_ = new ExtendedInvoiceItem();
  TransferInfo::default_instance_ = new TransferInfo();
  TransferBase::default_instance_ = new TransferBase();
  Waybill::default_instance_ = new Waybill();
  Employee::default_instance_ = new Employee();
  OtherIssuer::default_instance_ = new OtherIssuer();
  AdditionalInfoId::default_instance_ = new AdditionalInfoId();
  UniversalTransferDocumentBuyerTitleInfo::default_instance_ = new UniversalTransferDocumentBuyerTitleInfo();
  UniversalTransferDocumentSellerTitleInfo::default_instance_->InitAsDefaultInstance();
  Shipper::default_instance_->InitAsDefaultInstance();
  InvoiceTable::default_instance_->InitAsDefaultInstance();
  ExtendedInvoiceItem::default_instance_->InitAsDefaultInstance();
  TransferInfo::default_instance_->InitAsDefaultInstance();
  TransferBase::default_instance_->InitAsDefaultInstance();
  Waybill::default_instance_->InitAsDefaultInstance();
  Employee::default_instance_->InitAsDefaultInstance();
  OtherIssuer::default_instance_->InitAsDefaultInstance();
  AdditionalInfoId::default_instance_->InitAsDefaultInstance();
  UniversalTransferDocumentBuyerTitleInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Invoicing_2fUniversalTransferDocumentInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Invoicing_2fUniversalTransferDocumentInfo_2eproto {
  StaticDescriptorInitializer_Invoicing_2fUniversalTransferDocumentInfo_2eproto() {
    protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  }
} static_descriptor_initializer_Invoicing_2fUniversalTransferDocumentInfo_2eproto_;
const ::google::protobuf::EnumDescriptor* FunctionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionType_descriptor_;
}
bool FunctionType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ItemMark_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemMark_descriptor_;
}
bool ItemMark_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int UniversalTransferDocumentSellerTitleInfo::kFunctionFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kDocumentNameFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kDocumentDateFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kDocumentNumberFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kSellerFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kBuyerFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kShipperFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kConsigneeFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kSignersFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kPaymentDocumentsFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kInvoiceTableFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kCurrencyFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kCurrencyRateFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kRevisionDateFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kRevisionNumberFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kAdditionalInfoIdFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kTransferInfoFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kDocumentCreatorFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kDocumentCreatorBaseFieldNumber;
const int UniversalTransferDocumentSellerTitleInfo::kGovermentContractInfoFieldNumber;
#endif  // !_MSC_VER

UniversalTransferDocumentSellerTitleInfo::UniversalTransferDocumentSellerTitleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
}

void UniversalTransferDocumentSellerTitleInfo::InitAsDefaultInstance() {
  seller_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  buyer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  shipper_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Shipper*>(&::Diadoc::Api::Proto::Invoicing::Shipper::default_instance());
  consignee_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  invoicetable_ = const_cast< ::Diadoc::Api::Proto::Invoicing::InvoiceTable*>(&::Diadoc::Api::Proto::Invoicing::InvoiceTable::default_instance());
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
  transferinfo_ = const_cast< ::Diadoc::Api::Proto::Invoicing::TransferInfo*>(&::Diadoc::Api::Proto::Invoicing::TransferInfo::default_instance());
}

UniversalTransferDocumentSellerTitleInfo::UniversalTransferDocumentSellerTitleInfo(const UniversalTransferDocumentSellerTitleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
}

void UniversalTransferDocumentSellerTitleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  function_ = 0;
  documentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seller_ = NULL;
  buyer_ = NULL;
  shipper_ = NULL;
  consignee_ = NULL;
  invoicetable_ = NULL;
  currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currencyrate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revisiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revisionnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additionalinfoid_ = NULL;
  transferinfo_ = NULL;
  documentcreator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreatorbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  govermentcontractinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UniversalTransferDocumentSellerTitleInfo::~UniversalTransferDocumentSellerTitleInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  SharedDtor();
}

void UniversalTransferDocumentSellerTitleInfo::SharedDtor() {
  if (documentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentname_;
  }
  if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentdate_;
  }
  if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentnumber_;
  }
  if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currency_;
  }
  if (currencyrate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete currencyrate_;
  }
  if (revisiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revisiondate_;
  }
  if (revisionnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete revisionnumber_;
  }
  if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreator_;
  }
  if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreatorbase_;
  }
  if (govermentcontractinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete govermentcontractinfo_;
  }
  if (this != default_instance_) {
    delete seller_;
    delete buyer_;
    delete shipper_;
    delete consignee_;
    delete invoicetable_;
    delete additionalinfoid_;
    delete transferinfo_;
  }
}

void UniversalTransferDocumentSellerTitleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UniversalTransferDocumentSellerTitleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UniversalTransferDocumentSellerTitleInfo_descriptor_;
}

const UniversalTransferDocumentSellerTitleInfo& UniversalTransferDocumentSellerTitleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

UniversalTransferDocumentSellerTitleInfo* UniversalTransferDocumentSellerTitleInfo::default_instance_ = NULL;

UniversalTransferDocumentSellerTitleInfo* UniversalTransferDocumentSellerTitleInfo::New() const {
  return new UniversalTransferDocumentSellerTitleInfo;
}

void UniversalTransferDocumentSellerTitleInfo::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    function_ = 0;
    if (has_documentname()) {
      if (documentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentname_->clear();
      }
    }
    if (has_documentdate()) {
      if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentdate_->clear();
      }
    }
    if (has_documentnumber()) {
      if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentnumber_->clear();
      }
    }
    if (has_seller()) {
      if (seller_ != NULL) seller_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_buyer()) {
      if (buyer_ != NULL) buyer_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_shipper()) {
      if (shipper_ != NULL) shipper_->::Diadoc::Api::Proto::Invoicing::Shipper::Clear();
    }
    if (has_consignee()) {
      if (consignee_ != NULL) consignee_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 64512) {
    if (has_invoicetable()) {
      if (invoicetable_ != NULL) invoicetable_->::Diadoc::Api::Proto::Invoicing::InvoiceTable::Clear();
    }
    if (has_currency()) {
      if (currency_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currency_->clear();
      }
    }
    if (has_currencyrate()) {
      if (currencyrate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        currencyrate_->clear();
      }
    }
    if (has_revisiondate()) {
      if (revisiondate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revisiondate_->clear();
      }
    }
    if (has_revisionnumber()) {
      if (revisionnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        revisionnumber_->clear();
      }
    }
    if (has_additionalinfoid()) {
      if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 983040) {
    if (has_transferinfo()) {
      if (transferinfo_ != NULL) transferinfo_->::Diadoc::Api::Proto::Invoicing::TransferInfo::Clear();
    }
    if (has_documentcreator()) {
      if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreator_->clear();
      }
    }
    if (has_documentcreatorbase()) {
      if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreatorbase_->clear();
      }
    }
    if (has_govermentcontractinfo()) {
      if (govermentcontractinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        govermentcontractinfo_->clear();
      }
    }
  }
  signers_.Clear();
  paymentdocuments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UniversalTransferDocumentSellerTitleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Invoicing::FunctionType_IsValid(value)) {
            set_function(static_cast< ::Diadoc::Api::Proto::Invoicing::FunctionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DocumentName;
        break;
      }

      // optional string DocumentName = 2;
      case 2: {
        if (tag == 18) {
         parse_DocumentName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentname().data(), this->documentname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_DocumentDate;
        break;
      }

      // required string DocumentDate = 3;
      case 3: {
        if (tag == 26) {
         parse_DocumentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentdate().data(), this->documentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_DocumentNumber;
        break;
      }

      // required string DocumentNumber = 4;
      case 4: {
        if (tag == 34) {
         parse_DocumentNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentnumber().data(), this->documentnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Seller;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 5;
      case 5: {
        if (tag == 42) {
         parse_Seller:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seller()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Buyer;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 6;
      case 6: {
        if (tag == 50) {
         parse_Buyer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buyer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Shipper;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Shipper Shipper = 7;
      case 7: {
        if (tag == 58) {
         parse_Shipper:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shipper()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Consignee;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 8;
      case 8: {
        if (tag == 66) {
         parse_Consignee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_consignee()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Signers;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
      case 9: {
        if (tag == 74) {
         parse_Signers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Signers;
        if (input->ExpectTag(82)) goto parse_PaymentDocuments;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.PaymentDocumentInfo PaymentDocuments = 10;
      case 10: {
        if (tag == 82) {
         parse_PaymentDocuments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_paymentdocuments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_PaymentDocuments;
        if (input->ExpectTag(90)) goto parse_InvoiceTable;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.InvoiceTable InvoiceTable = 11;
      case 11: {
        if (tag == 90) {
         parse_InvoiceTable:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invoicetable()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_Currency;
        break;
      }

      // required string Currency = 12;
      case 12: {
        if (tag == 98) {
         parse_Currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency().data(), this->currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "currency");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_CurrencyRate;
        break;
      }

      // optional string CurrencyRate = 13;
      case 13: {
        if (tag == 106) {
         parse_CurrencyRate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currencyrate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currencyrate().data(), this->currencyrate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "currencyrate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_RevisionDate;
        break;
      }

      // optional string RevisionDate = 14;
      case 14: {
        if (tag == 114) {
         parse_RevisionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revisiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revisiondate().data(), this->revisiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revisiondate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_RevisionNumber;
        break;
      }

      // optional string RevisionNumber = 15;
      case 15: {
        if (tag == 122) {
         parse_RevisionNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_revisionnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->revisionnumber().data(), this->revisionnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "revisionnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 16;
      case 16: {
        if (tag == 130) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_TransferInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.TransferInfo TransferInfo = 17;
      case 17: {
        if (tag == 138) {
         parse_TransferInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transferinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_DocumentCreator;
        break;
      }

      // required string DocumentCreator = 18;
      case 18: {
        if (tag == 146) {
         parse_DocumentCreator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreator().data(), this->documentcreator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_DocumentCreatorBase;
        break;
      }

      // optional string DocumentCreatorBase = 19;
      case 19: {
        if (tag == 154) {
         parse_DocumentCreatorBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreatorbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreatorbase().data(), this->documentcreatorbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreatorbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_GovermentContractInfo;
        break;
      }

      // optional string GovermentContractInfo = 20;
      case 20: {
        if (tag == 162) {
         parse_GovermentContractInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_govermentcontractinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->govermentcontractinfo().data(), this->govermentcontractinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "govermentcontractinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  return false;
#undef DO_
}

void UniversalTransferDocumentSellerTitleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  // required .Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->function(), output);
  }

  // optional string DocumentName = 2;
  if (has_documentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentname().data(), this->documentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->documentname(), output);
  }

  // required string DocumentDate = 3;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->documentdate(), output);
  }

  // required string DocumentNumber = 4;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->documentnumber(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 5;
  if (has_seller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->seller(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 6;
  if (has_buyer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->buyer(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Shipper Shipper = 7;
  if (has_shipper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->shipper(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 8;
  if (has_consignee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->consignee(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  for (int i = 0; i < this->signers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->signers(i), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.PaymentDocumentInfo PaymentDocuments = 10;
  for (int i = 0; i < this->paymentdocuments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->paymentdocuments(i), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.InvoiceTable InvoiceTable = 11;
  if (has_invoicetable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->invoicetable(), output);
  }

  // required string Currency = 12;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->currency(), output);
  }

  // optional string CurrencyRate = 13;
  if (has_currencyrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currencyrate().data(), this->currencyrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currencyrate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->currencyrate(), output);
  }

  // optional string RevisionDate = 14;
  if (has_revisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisiondate().data(), this->revisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisiondate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->revisiondate(), output);
  }

  // optional string RevisionNumber = 15;
  if (has_revisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisionnumber().data(), this->revisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisionnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->revisionnumber(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 16;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->additionalinfoid(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TransferInfo TransferInfo = 17;
  if (has_transferinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->transferinfo(), output);
  }

  // required string DocumentCreator = 18;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->documentcreator(), output);
  }

  // optional string DocumentCreatorBase = 19;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->documentcreatorbase(), output);
  }

  // optional string GovermentContractInfo = 20;
  if (has_govermentcontractinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->govermentcontractinfo().data(), this->govermentcontractinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "govermentcontractinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->govermentcontractinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
}

::google::protobuf::uint8* UniversalTransferDocumentSellerTitleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  // required .Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->function(), target);
  }

  // optional string DocumentName = 2;
  if (has_documentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentname().data(), this->documentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->documentname(), target);
  }

  // required string DocumentDate = 3;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->documentdate(), target);
  }

  // required string DocumentNumber = 4;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->documentnumber(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 5;
  if (has_seller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->seller(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 6;
  if (has_buyer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->buyer(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Shipper Shipper = 7;
  if (has_shipper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->shipper(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 8;
  if (has_consignee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->consignee(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  for (int i = 0; i < this->signers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->signers(i), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.PaymentDocumentInfo PaymentDocuments = 10;
  for (int i = 0; i < this->paymentdocuments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->paymentdocuments(i), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.InvoiceTable InvoiceTable = 11;
  if (has_invoicetable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->invoicetable(), target);
  }

  // required string Currency = 12;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), this->currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->currency(), target);
  }

  // optional string CurrencyRate = 13;
  if (has_currencyrate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currencyrate().data(), this->currencyrate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "currencyrate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->currencyrate(), target);
  }

  // optional string RevisionDate = 14;
  if (has_revisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisiondate().data(), this->revisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisiondate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->revisiondate(), target);
  }

  // optional string RevisionNumber = 15;
  if (has_revisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->revisionnumber().data(), this->revisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "revisionnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->revisionnumber(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 16;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->additionalinfoid(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.TransferInfo TransferInfo = 17;
  if (has_transferinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->transferinfo(), target);
  }

  // required string DocumentCreator = 18;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->documentcreator(), target);
  }

  // optional string DocumentCreatorBase = 19;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->documentcreatorbase(), target);
  }

  // optional string GovermentContractInfo = 20;
  if (has_govermentcontractinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->govermentcontractinfo().data(), this->govermentcontractinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "govermentcontractinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->govermentcontractinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentSellerTitleInfo)
  return target;
}

int UniversalTransferDocumentSellerTitleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Invoicing.FunctionType Function = 1;
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->function());
    }

    // optional string DocumentName = 2;
    if (has_documentname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentname());
    }

    // required string DocumentDate = 3;
    if (has_documentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentdate());
    }

    // required string DocumentNumber = 4;
    if (has_documentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentnumber());
    }

    // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Seller = 5;
    if (has_seller()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->seller());
    }

    // required .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Buyer = 6;
    if (has_buyer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buyer());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Shipper Shipper = 7;
    if (has_shipper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shipper());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Consignee = 8;
    if (has_consignee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->consignee());
    }

  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // optional .Diadoc.Api.Proto.Invoicing.InvoiceTable InvoiceTable = 11;
    if (has_invoicetable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoicetable());
    }

    // required string Currency = 12;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

    // optional string CurrencyRate = 13;
    if (has_currencyrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currencyrate());
    }

    // optional string RevisionDate = 14;
    if (has_revisiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revisiondate());
    }

    // optional string RevisionNumber = 15;
    if (has_revisionnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->revisionnumber());
    }

    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 16;
    if (has_additionalinfoid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .Diadoc.Api.Proto.Invoicing.TransferInfo TransferInfo = 17;
    if (has_transferinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transferinfo());
    }

    // required string DocumentCreator = 18;
    if (has_documentcreator()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreator());
    }

    // optional string DocumentCreatorBase = 19;
    if (has_documentcreatorbase()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreatorbase());
    }

    // optional string GovermentContractInfo = 20;
    if (has_govermentcontractinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->govermentcontractinfo());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  total_size += 1 * this->signers_size();
  for (int i = 0; i < this->signers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signers(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.PaymentDocumentInfo PaymentDocuments = 10;
  total_size += 1 * this->paymentdocuments_size();
  for (int i = 0; i < this->paymentdocuments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->paymentdocuments(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniversalTransferDocumentSellerTitleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UniversalTransferDocumentSellerTitleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UniversalTransferDocumentSellerTitleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UniversalTransferDocumentSellerTitleInfo::MergeFrom(const UniversalTransferDocumentSellerTitleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  signers_.MergeFrom(from.signers_);
  paymentdocuments_.MergeFrom(from.paymentdocuments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_function()) {
      set_function(from.function());
    }
    if (from.has_documentname()) {
      set_documentname(from.documentname());
    }
    if (from.has_documentdate()) {
      set_documentdate(from.documentdate());
    }
    if (from.has_documentnumber()) {
      set_documentnumber(from.documentnumber());
    }
    if (from.has_seller()) {
      mutable_seller()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.seller());
    }
    if (from.has_buyer()) {
      mutable_buyer()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.buyer());
    }
    if (from.has_shipper()) {
      mutable_shipper()->::Diadoc::Api::Proto::Invoicing::Shipper::MergeFrom(from.shipper());
    }
    if (from.has_consignee()) {
      mutable_consignee()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.consignee());
    }
  }
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_invoicetable()) {
      mutable_invoicetable()->::Diadoc::Api::Proto::Invoicing::InvoiceTable::MergeFrom(from.invoicetable());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_currencyrate()) {
      set_currencyrate(from.currencyrate());
    }
    if (from.has_revisiondate()) {
      set_revisiondate(from.revisiondate());
    }
    if (from.has_revisionnumber()) {
      set_revisionnumber(from.revisionnumber());
    }
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_transferinfo()) {
      mutable_transferinfo()->::Diadoc::Api::Proto::Invoicing::TransferInfo::MergeFrom(from.transferinfo());
    }
    if (from.has_documentcreator()) {
      set_documentcreator(from.documentcreator());
    }
    if (from.has_documentcreatorbase()) {
      set_documentcreatorbase(from.documentcreatorbase());
    }
    if (from.has_govermentcontractinfo()) {
      set_govermentcontractinfo(from.govermentcontractinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UniversalTransferDocumentSellerTitleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniversalTransferDocumentSellerTitleInfo::CopyFrom(const UniversalTransferDocumentSellerTitleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniversalTransferDocumentSellerTitleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0002083d) != 0x0002083d) return false;

  if (has_seller()) {
    if (!this->seller().IsInitialized()) return false;
  }
  if (has_buyer()) {
    if (!this->buyer().IsInitialized()) return false;
  }
  if (has_shipper()) {
    if (!this->shipper().IsInitialized()) return false;
  }
  if (has_consignee()) {
    if (!this->consignee().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->signers())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->paymentdocuments())) return false;
  if (has_invoicetable()) {
    if (!this->invoicetable().IsInitialized()) return false;
  }
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  if (has_transferinfo()) {
    if (!this->transferinfo().IsInitialized()) return false;
  }
  return true;
}

void UniversalTransferDocumentSellerTitleInfo::Swap(UniversalTransferDocumentSellerTitleInfo* other) {
  if (other != this) {
    std::swap(function_, other->function_);
    std::swap(documentname_, other->documentname_);
    std::swap(documentdate_, other->documentdate_);
    std::swap(documentnumber_, other->documentnumber_);
    std::swap(seller_, other->seller_);
    std::swap(buyer_, other->buyer_);
    std::swap(shipper_, other->shipper_);
    std::swap(consignee_, other->consignee_);
    signers_.Swap(&other->signers_);
    paymentdocuments_.Swap(&other->paymentdocuments_);
    std::swap(invoicetable_, other->invoicetable_);
    std::swap(currency_, other->currency_);
    std::swap(currencyrate_, other->currencyrate_);
    std::swap(revisiondate_, other->revisiondate_);
    std::swap(revisionnumber_, other->revisionnumber_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    std::swap(transferinfo_, other->transferinfo_);
    std::swap(documentcreator_, other->documentcreator_);
    std::swap(documentcreatorbase_, other->documentcreatorbase_);
    std::swap(govermentcontractinfo_, other->govermentcontractinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UniversalTransferDocumentSellerTitleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UniversalTransferDocumentSellerTitleInfo_descriptor_;
  metadata.reflection = UniversalTransferDocumentSellerTitleInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Shipper::kSameAsSellerFieldNumber;
const int Shipper::kOrgInfoFieldNumber;
#endif  // !_MSC_VER

Shipper::Shipper()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.Shipper)
}

void Shipper::InitAsDefaultInstance() {
  orginfo_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
}

Shipper::Shipper(const Shipper& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.Shipper)
}

void Shipper::SharedCtor() {
  _cached_size_ = 0;
  sameasseller_ = false;
  orginfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Shipper::~Shipper() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.Shipper)
  SharedDtor();
}

void Shipper::SharedDtor() {
  if (this != default_instance_) {
    delete orginfo_;
  }
}

void Shipper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shipper::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shipper_descriptor_;
}

const Shipper& Shipper::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

Shipper* Shipper::default_instance_ = NULL;

Shipper* Shipper::New() const {
  return new Shipper;
}

void Shipper::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    sameasseller_ = false;
    if (has_orginfo()) {
      if (orginfo_ != NULL) orginfo_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Shipper::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.Shipper)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool SameAsSeller = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sameasseller_)));
          set_has_sameasseller();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_OrgInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo OrgInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_OrgInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_orginfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.Shipper)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.Shipper)
  return false;
#undef DO_
}

void Shipper::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.Shipper)
  // optional bool SameAsSeller = 1;
  if (has_sameasseller()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->sameasseller(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo OrgInfo = 2;
  if (has_orginfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->orginfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.Shipper)
}

::google::protobuf::uint8* Shipper::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.Shipper)
  // optional bool SameAsSeller = 1;
  if (has_sameasseller()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->sameasseller(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo OrgInfo = 2;
  if (has_orginfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->orginfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.Shipper)
  return target;
}

int Shipper::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool SameAsSeller = 1;
    if (has_sameasseller()) {
      total_size += 1 + 1;
    }

    // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo OrgInfo = 2;
    if (has_orginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->orginfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shipper::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Shipper* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Shipper*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Shipper::MergeFrom(const Shipper& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sameasseller()) {
      set_sameasseller(from.sameasseller());
    }
    if (from.has_orginfo()) {
      mutable_orginfo()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.orginfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Shipper::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shipper::CopyFrom(const Shipper& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shipper::IsInitialized() const {

  if (has_orginfo()) {
    if (!this->orginfo().IsInitialized()) return false;
  }
  return true;
}

void Shipper::Swap(Shipper* other) {
  if (other != this) {
    std::swap(sameasseller_, other->sameasseller_);
    std::swap(orginfo_, other->orginfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Shipper::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shipper_descriptor_;
  metadata.reflection = Shipper_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvoiceTable::kItemsFieldNumber;
const int InvoiceTable::kTotalWithVatExcludedFieldNumber;
const int InvoiceTable::kVatFieldNumber;
const int InvoiceTable::kTotalFieldNumber;
const int InvoiceTable::kTotalNetFieldNumber;
#endif  // !_MSC_VER

InvoiceTable::InvoiceTable()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.InvoiceTable)
}

void InvoiceTable::InitAsDefaultInstance() {
}

InvoiceTable::InvoiceTable(const InvoiceTable& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.InvoiceTable)
}

void InvoiceTable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  totalwithvatexcluded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalnet_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvoiceTable::~InvoiceTable() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  SharedDtor();
}

void InvoiceTable::SharedDtor() {
  if (totalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalwithvatexcluded_;
  }
  if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vat_;
  }
  if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete total_;
  }
  if (totalnet_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totalnet_;
  }
  if (this != default_instance_) {
  }
}

void InvoiceTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvoiceTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvoiceTable_descriptor_;
}

const InvoiceTable& InvoiceTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

InvoiceTable* InvoiceTable::default_instance_ = NULL;

InvoiceTable* InvoiceTable::New() const {
  return new InvoiceTable;
}

void InvoiceTable::Clear() {
  if (_has_bits_[0 / 32] & 30) {
    if (has_totalwithvatexcluded()) {
      if (totalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalwithvatexcluded_->clear();
      }
    }
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        vat_->clear();
      }
    }
    if (has_total()) {
      if (total_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        total_->clear();
      }
    }
    if (has_totalnet()) {
      if (totalnet_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totalnet_->clear();
      }
    }
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvoiceTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem Items = 1;
      case 1: {
        if (tag == 10) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Items;
        if (input->ExpectTag(18)) goto parse_TotalWithVatExcluded;
        break;
      }

      // optional string TotalWithVatExcluded = 2;
      case 2: {
        if (tag == 18) {
         parse_TotalWithVatExcluded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalwithvatexcluded()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalwithvatexcluded");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Vat;
        break;
      }

      // required string Vat = 3;
      case 3: {
        if (tag == 26) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Total;
        break;
      }

      // required string Total = 4;
      case 4: {
        if (tag == 34) {
         parse_Total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->total().data(), this->total().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "total");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TotalNet;
        break;
      }

      // optional string TotalNet = 5;
      case 5: {
        if (tag == 42) {
         parse_TotalNet:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalnet()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalnet().data(), this->totalnet().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totalnet");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  return false;
#undef DO_
}

void InvoiceTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  // repeated .Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional string TotalWithVatExcluded = 2;
  if (has_totalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalwithvatexcluded");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->totalwithvatexcluded(), output);
  }

  // required string Vat = 3;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vat(), output);
  }

  // required string Total = 4;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->total(), output);
  }

  // optional string TotalNet = 5;
  if (has_totalnet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalnet().data(), this->totalnet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalnet");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->totalnet(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.InvoiceTable)
}

::google::protobuf::uint8* InvoiceTable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  // repeated .Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem Items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // optional string TotalWithVatExcluded = 2;
  if (has_totalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalwithvatexcluded().data(), this->totalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalwithvatexcluded");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->totalwithvatexcluded(), target);
  }

  // required string Vat = 3;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vat(), target);
  }

  // required string Total = 4;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "total");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->total(), target);
  }

  // optional string TotalNet = 5;
  if (has_totalnet()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalnet().data(), this->totalnet().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totalnet");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->totalnet(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.InvoiceTable)
  return target;
}

int InvoiceTable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string TotalWithVatExcluded = 2;
    if (has_totalwithvatexcluded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalwithvatexcluded());
    }

    // required string Vat = 3;
    if (has_vat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

    // required string Total = 4;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->total());
    }

    // optional string TotalNet = 5;
    if (has_totalnet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalnet());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem Items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvoiceTable::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvoiceTable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvoiceTable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvoiceTable::MergeFrom(const InvoiceTable& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_totalwithvatexcluded()) {
      set_totalwithvatexcluded(from.totalwithvatexcluded());
    }
    if (from.has_vat()) {
      set_vat(from.vat());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
    if (from.has_totalnet()) {
      set_totalnet(from.totalnet());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvoiceTable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvoiceTable::CopyFrom(const InvoiceTable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceTable::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void InvoiceTable::Swap(InvoiceTable* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(totalwithvatexcluded_, other->totalwithvatexcluded_);
    std::swap(vat_, other->vat_);
    std::swap(total_, other->total_);
    std::swap(totalnet_, other->totalnet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvoiceTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvoiceTable_descriptor_;
  metadata.reflection = InvoiceTable_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExtendedInvoiceItem::kProductFieldNumber;
const int ExtendedInvoiceItem::kUnitFieldNumber;
const int ExtendedInvoiceItem::kUnitNameFieldNumber;
const int ExtendedInvoiceItem::kQuantityFieldNumber;
const int ExtendedInvoiceItem::kPriceFieldNumber;
const int ExtendedInvoiceItem::kExciseFieldNumber;
const int ExtendedInvoiceItem::kTaxRateFieldNumber;
const int ExtendedInvoiceItem::kSubtotalWithVatExcludedFieldNumber;
const int ExtendedInvoiceItem::kVatFieldNumber;
const int ExtendedInvoiceItem::kSubtotalFieldNumber;
const int ExtendedInvoiceItem::kCustomsDeclarationsFieldNumber;
const int ExtendedInvoiceItem::kItemMarkFieldNumber;
const int ExtendedInvoiceItem::kAdditionalPropertyFieldNumber;
const int ExtendedInvoiceItem::kItemVendorCodeFieldNumber;
const int ExtendedInvoiceItem::kItemToReleaseFieldNumber;
const int ExtendedInvoiceItem::kItemAccountDebitFieldNumber;
const int ExtendedInvoiceItem::kItemAccountCreditFieldNumber;
const int ExtendedInvoiceItem::kAdditionalInfoFieldNumber;
#endif  // !_MSC_VER

ExtendedInvoiceItem::ExtendedInvoiceItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
}

void ExtendedInvoiceItem::InitAsDefaultInstance() {
}

ExtendedInvoiceItem::ExtendedInvoiceItem(const ExtendedInvoiceItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
}

void ExtendedInvoiceItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  product_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unitname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quantity_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  excise_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taxrate_ = 0;
  subtotalwithvatexcluded_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subtotal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemmark_ = 0;
  additionalproperty_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemvendorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemtorelease_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemaccountdebit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  itemaccountcredit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtendedInvoiceItem::~ExtendedInvoiceItem() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  SharedDtor();
}

void ExtendedInvoiceItem::SharedDtor() {
  if (product_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete product_;
  }
  if (unit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unit_;
  }
  if (unitname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete unitname_;
  }
  if (quantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete quantity_;
  }
  if (price_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete price_;
  }
  if (excise_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete excise_;
  }
  if (subtotalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtotalwithvatexcluded_;
  }
  if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete vat_;
  }
  if (subtotal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subtotal_;
  }
  if (additionalproperty_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete additionalproperty_;
  }
  if (itemvendorcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemvendorcode_;
  }
  if (itemtorelease_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemtorelease_;
  }
  if (itemaccountdebit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemaccountdebit_;
  }
  if (itemaccountcredit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemaccountcredit_;
  }
  if (this != default_instance_) {
  }
}

void ExtendedInvoiceItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtendedInvoiceItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtendedInvoiceItem_descriptor_;
}

const ExtendedInvoiceItem& ExtendedInvoiceItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

ExtendedInvoiceItem* ExtendedInvoiceItem::default_instance_ = NULL;

ExtendedInvoiceItem* ExtendedInvoiceItem::New() const {
  return new ExtendedInvoiceItem;
}

void ExtendedInvoiceItem::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_product()) {
      if (product_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        product_->clear();
      }
    }
    if (has_unit()) {
      if (unit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unit_->clear();
      }
    }
    if (has_unitname()) {
      if (unitname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        unitname_->clear();
      }
    }
    if (has_quantity()) {
      if (quantity_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        quantity_->clear();
      }
    }
    if (has_price()) {
      if (price_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        price_->clear();
      }
    }
    if (has_excise()) {
      if (excise_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        excise_->clear();
      }
    }
    taxrate_ = 0;
    if (has_subtotalwithvatexcluded()) {
      if (subtotalwithvatexcluded_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subtotalwithvatexcluded_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 64256) {
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        vat_->clear();
      }
    }
    if (has_subtotal()) {
      if (subtotal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        subtotal_->clear();
      }
    }
    itemmark_ = 0;
    if (has_additionalproperty()) {
      if (additionalproperty_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        additionalproperty_->clear();
      }
    }
    if (has_itemvendorcode()) {
      if (itemvendorcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemvendorcode_->clear();
      }
    }
    if (has_itemtorelease()) {
      if (itemtorelease_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemtorelease_->clear();
      }
    }
    if (has_itemaccountdebit()) {
      if (itemaccountdebit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        itemaccountdebit_->clear();
      }
    }
  }
  if (has_itemaccountcredit()) {
    if (itemaccountcredit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      itemaccountcredit_->clear();
    }
  }
  customsdeclarations_.Clear();
  additionalinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExtendedInvoiceItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string Product = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product().data(), this->product().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "product");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Unit;
        break;
      }

      // optional string Unit = 2;
      case 2: {
        if (tag == 18) {
         parse_Unit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unit().data(), this->unit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_UnitName;
        break;
      }

      // optional string UnitName = 3;
      case 3: {
        if (tag == 26) {
         parse_UnitName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unitname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unitname().data(), this->unitname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "unitname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Quantity;
        break;
      }

      // optional string Quantity = 4;
      case 4: {
        if (tag == 34) {
         parse_Quantity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quantity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->quantity().data(), this->quantity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "quantity");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Price;
        break;
      }

      // optional string Price = 5;
      case 5: {
        if (tag == 42) {
         parse_Price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "price");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Excise;
        break;
      }

      // optional string Excise = 6;
      case 6: {
        if (tag == 50) {
         parse_Excise:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_excise()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excise().data(), this->excise().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "excise");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_TaxRate;
        break;
      }

      // required .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 7;
      case 7: {
        if (tag == 56) {
         parse_TaxRate:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Invoicing::TaxRate_IsValid(value)) {
            set_taxrate(static_cast< ::Diadoc::Api::Proto::Invoicing::TaxRate >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SubtotalWithVatExcluded;
        break;
      }

      // optional string SubtotalWithVatExcluded = 8;
      case 8: {
        if (tag == 66) {
         parse_SubtotalWithVatExcluded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtotalwithvatexcluded()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subtotalwithvatexcluded");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Vat;
        break;
      }

      // optional string Vat = 9;
      case 9: {
        if (tag == 74) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "vat");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Subtotal;
        break;
      }

      // required string Subtotal = 10;
      case 10: {
        if (tag == 82) {
         parse_Subtotal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subtotal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subtotal().data(), this->subtotal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "subtotal");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_CustomsDeclarations;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.CustomsDeclaration CustomsDeclarations = 11;
      case 11: {
        if (tag == 90) {
         parse_CustomsDeclarations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_customsdeclarations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_CustomsDeclarations;
        if (input->ExpectTag(96)) goto parse_ItemMark;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.ItemMark ItemMark = 12;
      case 12: {
        if (tag == 96) {
         parse_ItemMark:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Invoicing::ItemMark_IsValid(value)) {
            set_itemmark(static_cast< ::Diadoc::Api::Proto::Invoicing::ItemMark >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_AdditionalProperty;
        break;
      }

      // optional string AdditionalProperty = 13;
      case 13: {
        if (tag == 106) {
         parse_AdditionalProperty:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_additionalproperty()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->additionalproperty().data(), this->additionalproperty().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "additionalproperty");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_ItemVendorCode;
        break;
      }

      // optional string ItemVendorCode = 14;
      case 14: {
        if (tag == 114) {
         parse_ItemVendorCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemvendorcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemvendorcode().data(), this->itemvendorcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemvendorcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_ItemToRelease;
        break;
      }

      // optional string ItemToRelease = 15;
      case 15: {
        if (tag == 122) {
         parse_ItemToRelease:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemtorelease()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemtorelease().data(), this->itemtorelease().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemtorelease");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_ItemAccountDebit;
        break;
      }

      // optional string ItemAccountDebit = 16;
      case 16: {
        if (tag == 130) {
         parse_ItemAccountDebit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemaccountdebit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemaccountdebit().data(), this->itemaccountdebit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemaccountdebit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_ItemAccountCredit;
        break;
      }

      // optional string ItemAccountCredit = 17;
      case 17: {
        if (tag == 138) {
         parse_ItemAccountCredit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemaccountcredit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->itemaccountcredit().data(), this->itemaccountcredit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "itemaccountcredit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_AdditionalInfo;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 18;
      case 18: {
        if (tag == 146) {
         parse_AdditionalInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additionalinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_AdditionalInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  return false;
#undef DO_
}

void ExtendedInvoiceItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  // required string Product = 1;
  if (has_product()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), this->product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product(), output);
  }

  // optional string Unit = 2;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unit(), output);
  }

  // optional string UnitName = 3;
  if (has_unitname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitname().data(), this->unitname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->unitname(), output);
  }

  // optional string Quantity = 4;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->quantity(), output);
  }

  // optional string Price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->price(), output);
  }

  // optional string Excise = 6;
  if (has_excise()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excise().data(), this->excise().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "excise");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->excise(), output);
  }

  // required .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 7;
  if (has_taxrate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->taxrate(), output);
  }

  // optional string SubtotalWithVatExcluded = 8;
  if (has_subtotalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotalwithvatexcluded");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->subtotalwithvatexcluded(), output);
  }

  // optional string Vat = 9;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->vat(), output);
  }

  // required string Subtotal = 10;
  if (has_subtotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotal().data(), this->subtotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->subtotal(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.CustomsDeclaration CustomsDeclarations = 11;
  for (int i = 0; i < this->customsdeclarations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->customsdeclarations(i), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.ItemMark ItemMark = 12;
  if (has_itemmark()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->itemmark(), output);
  }

  // optional string AdditionalProperty = 13;
  if (has_additionalproperty()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->additionalproperty().data(), this->additionalproperty().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "additionalproperty");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->additionalproperty(), output);
  }

  // optional string ItemVendorCode = 14;
  if (has_itemvendorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemvendorcode().data(), this->itemvendorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemvendorcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->itemvendorcode(), output);
  }

  // optional string ItemToRelease = 15;
  if (has_itemtorelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemtorelease().data(), this->itemtorelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemtorelease");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->itemtorelease(), output);
  }

  // optional string ItemAccountDebit = 16;
  if (has_itemaccountdebit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountdebit().data(), this->itemaccountdebit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountdebit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->itemaccountdebit(), output);
  }

  // optional string ItemAccountCredit = 17;
  if (has_itemaccountcredit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountcredit().data(), this->itemaccountcredit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountcredit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->itemaccountcredit(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 18;
  for (int i = 0; i < this->additionalinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->additionalinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
}

::google::protobuf::uint8* ExtendedInvoiceItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  // required string Product = 1;
  if (has_product()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), this->product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product(), target);
  }

  // optional string Unit = 2;
  if (has_unit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unit().data(), this->unit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unit(), target);
  }

  // optional string UnitName = 3;
  if (has_unitname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unitname().data(), this->unitname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "unitname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->unitname(), target);
  }

  // optional string Quantity = 4;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "quantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->quantity(), target);
  }

  // optional string Price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->price(), target);
  }

  // optional string Excise = 6;
  if (has_excise()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excise().data(), this->excise().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "excise");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->excise(), target);
  }

  // required .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 7;
  if (has_taxrate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->taxrate(), target);
  }

  // optional string SubtotalWithVatExcluded = 8;
  if (has_subtotalwithvatexcluded()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotalwithvatexcluded().data(), this->subtotalwithvatexcluded().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotalwithvatexcluded");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->subtotalwithvatexcluded(), target);
  }

  // optional string Vat = 9;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "vat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->vat(), target);
  }

  // required string Subtotal = 10;
  if (has_subtotal()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subtotal().data(), this->subtotal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "subtotal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->subtotal(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.CustomsDeclaration CustomsDeclarations = 11;
  for (int i = 0; i < this->customsdeclarations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->customsdeclarations(i), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.ItemMark ItemMark = 12;
  if (has_itemmark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->itemmark(), target);
  }

  // optional string AdditionalProperty = 13;
  if (has_additionalproperty()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->additionalproperty().data(), this->additionalproperty().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "additionalproperty");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->additionalproperty(), target);
  }

  // optional string ItemVendorCode = 14;
  if (has_itemvendorcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemvendorcode().data(), this->itemvendorcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemvendorcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->itemvendorcode(), target);
  }

  // optional string ItemToRelease = 15;
  if (has_itemtorelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemtorelease().data(), this->itemtorelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemtorelease");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->itemtorelease(), target);
  }

  // optional string ItemAccountDebit = 16;
  if (has_itemaccountdebit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountdebit().data(), this->itemaccountdebit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountdebit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->itemaccountdebit(), target);
  }

  // optional string ItemAccountCredit = 17;
  if (has_itemaccountcredit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->itemaccountcredit().data(), this->itemaccountcredit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "itemaccountcredit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->itemaccountcredit(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 18;
  for (int i = 0; i < this->additionalinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->additionalinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.ExtendedInvoiceItem)
  return target;
}

int ExtendedInvoiceItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string Product = 1;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product());
    }

    // optional string Unit = 2;
    if (has_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unit());
    }

    // optional string UnitName = 3;
    if (has_unitname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unitname());
    }

    // optional string Quantity = 4;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->quantity());
    }

    // optional string Price = 5;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->price());
    }

    // optional string Excise = 6;
    if (has_excise()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->excise());
    }

    // required .Diadoc.Api.Proto.Invoicing.TaxRate TaxRate = 7;
    if (has_taxrate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->taxrate());
    }

    // optional string SubtotalWithVatExcluded = 8;
    if (has_subtotalwithvatexcluded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtotalwithvatexcluded());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string Vat = 9;
    if (has_vat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

    // required string Subtotal = 10;
    if (has_subtotal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subtotal());
    }

    // optional .Diadoc.Api.Proto.Invoicing.ItemMark ItemMark = 12;
    if (has_itemmark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->itemmark());
    }

    // optional string AdditionalProperty = 13;
    if (has_additionalproperty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->additionalproperty());
    }

    // optional string ItemVendorCode = 14;
    if (has_itemvendorcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemvendorcode());
    }

    // optional string ItemToRelease = 15;
    if (has_itemtorelease()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemtorelease());
    }

    // optional string ItemAccountDebit = 16;
    if (has_itemaccountdebit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemaccountdebit());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string ItemAccountCredit = 17;
    if (has_itemaccountcredit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemaccountcredit());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.CustomsDeclaration CustomsDeclarations = 11;
  total_size += 1 * this->customsdeclarations_size();
  for (int i = 0; i < this->customsdeclarations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->customsdeclarations(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 18;
  total_size += 2 * this->additionalinfo_size();
  for (int i = 0; i < this->additionalinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additionalinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtendedInvoiceItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExtendedInvoiceItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExtendedInvoiceItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtendedInvoiceItem::MergeFrom(const ExtendedInvoiceItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  customsdeclarations_.MergeFrom(from.customsdeclarations_);
  additionalinfo_.MergeFrom(from.additionalinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_product()) {
      set_product(from.product());
    }
    if (from.has_unit()) {
      set_unit(from.unit());
    }
    if (from.has_unitname()) {
      set_unitname(from.unitname());
    }
    if (from.has_quantity()) {
      set_quantity(from.quantity());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_excise()) {
      set_excise(from.excise());
    }
    if (from.has_taxrate()) {
      set_taxrate(from.taxrate());
    }
    if (from.has_subtotalwithvatexcluded()) {
      set_subtotalwithvatexcluded(from.subtotalwithvatexcluded());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vat()) {
      set_vat(from.vat());
    }
    if (from.has_subtotal()) {
      set_subtotal(from.subtotal());
    }
    if (from.has_itemmark()) {
      set_itemmark(from.itemmark());
    }
    if (from.has_additionalproperty()) {
      set_additionalproperty(from.additionalproperty());
    }
    if (from.has_itemvendorcode()) {
      set_itemvendorcode(from.itemvendorcode());
    }
    if (from.has_itemtorelease()) {
      set_itemtorelease(from.itemtorelease());
    }
    if (from.has_itemaccountdebit()) {
      set_itemaccountdebit(from.itemaccountdebit());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_itemaccountcredit()) {
      set_itemaccountcredit(from.itemaccountcredit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExtendedInvoiceItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendedInvoiceItem::CopyFrom(const ExtendedInvoiceItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendedInvoiceItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000241) != 0x00000241) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->customsdeclarations())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->additionalinfo())) return false;
  return true;
}

void ExtendedInvoiceItem::Swap(ExtendedInvoiceItem* other) {
  if (other != this) {
    std::swap(product_, other->product_);
    std::swap(unit_, other->unit_);
    std::swap(unitname_, other->unitname_);
    std::swap(quantity_, other->quantity_);
    std::swap(price_, other->price_);
    std::swap(excise_, other->excise_);
    std::swap(taxrate_, other->taxrate_);
    std::swap(subtotalwithvatexcluded_, other->subtotalwithvatexcluded_);
    std::swap(vat_, other->vat_);
    std::swap(subtotal_, other->subtotal_);
    customsdeclarations_.Swap(&other->customsdeclarations_);
    std::swap(itemmark_, other->itemmark_);
    std::swap(additionalproperty_, other->additionalproperty_);
    std::swap(itemvendorcode_, other->itemvendorcode_);
    std::swap(itemtorelease_, other->itemtorelease_);
    std::swap(itemaccountdebit_, other->itemaccountdebit_);
    std::swap(itemaccountcredit_, other->itemaccountcredit_);
    additionalinfo_.Swap(&other->additionalinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExtendedInvoiceItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtendedInvoiceItem_descriptor_;
  metadata.reflection = ExtendedInvoiceItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TransferInfo::kOperationInfoFieldNumber;
const int TransferInfo::kOperationTypeFieldNumber;
const int TransferInfo::kTransferDateFieldNumber;
const int TransferInfo::kTransferBaseFieldNumber;
const int TransferInfo::kTransferTextInfoFieldNumber;
const int TransferInfo::kWaybillFieldNumber;
const int TransferInfo::kCarrierFieldNumber;
const int TransferInfo::kEmployeeFieldNumber;
const int TransferInfo::kOtherIssuerFieldNumber;
const int TransferInfo::kCreatedThingTransferDateFieldNumber;
const int TransferInfo::kCreatedThingInfoFieldNumber;
const int TransferInfo::kAdditionalInfoIdFieldNumber;
#endif  // !_MSC_VER

TransferInfo::TransferInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TransferInfo)
}

void TransferInfo::InitAsDefaultInstance() {
  carrier_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo*>(&::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::default_instance());
  employee_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Employee*>(&::Diadoc::Api::Proto::Invoicing::Employee::default_instance());
  otherissuer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::OtherIssuer*>(&::Diadoc::Api::Proto::Invoicing::OtherIssuer::default_instance());
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
}

TransferInfo::TransferInfo(const TransferInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TransferInfo)
}

void TransferInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operationinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfertextinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  carrier_ = NULL;
  employee_ = NULL;
  otherissuer_ = NULL;
  createdthingtransferdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdthinginfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  additionalinfoid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransferInfo::~TransferInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TransferInfo)
  SharedDtor();
}

void TransferInfo::SharedDtor() {
  if (operationinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationinfo_;
  }
  if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationtype_;
  }
  if (transferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferdate_;
  }
  if (transfertextinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transfertextinfo_;
  }
  if (createdthingtransferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdthingtransferdate_;
  }
  if (createdthinginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdthinginfo_;
  }
  if (this != default_instance_) {
    delete carrier_;
    delete employee_;
    delete otherissuer_;
    delete additionalinfoid_;
  }
}

void TransferInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferInfo_descriptor_;
}

const TransferInfo& TransferInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

TransferInfo* TransferInfo::default_instance_ = NULL;

TransferInfo* TransferInfo::New() const {
  return new TransferInfo;
}

void TransferInfo::Clear() {
  if (_has_bits_[0 / 32] & 215) {
    if (has_operationinfo()) {
      if (operationinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationinfo_->clear();
      }
    }
    if (has_operationtype()) {
      if (operationtype_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationtype_->clear();
      }
    }
    if (has_transferdate()) {
      if (transferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferdate_->clear();
      }
    }
    if (has_transfertextinfo()) {
      if (transfertextinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transfertextinfo_->clear();
      }
    }
    if (has_carrier()) {
      if (carrier_ != NULL) carrier_->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::Clear();
    }
    if (has_employee()) {
      if (employee_ != NULL) employee_->::Diadoc::Api::Proto::Invoicing::Employee::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    if (has_otherissuer()) {
      if (otherissuer_ != NULL) otherissuer_->::Diadoc::Api::Proto::Invoicing::OtherIssuer::Clear();
    }
    if (has_createdthingtransferdate()) {
      if (createdthingtransferdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdthingtransferdate_->clear();
      }
    }
    if (has_createdthinginfo()) {
      if (createdthinginfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdthinginfo_->clear();
      }
    }
    if (has_additionalinfoid()) {
      if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
    }
  }
  transferbase_.Clear();
  waybill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TransferInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TransferInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string OperationInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationinfo().data(), this->operationinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_OperationType;
        break;
      }

      // optional string OperationType = 2;
      case 2: {
        if (tag == 18) {
         parse_OperationType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationtype().data(), this->operationtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TransferDate;
        break;
      }

      // optional string TransferDate = 3;
      case 3: {
        if (tag == 26) {
         parse_TransferDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferdate().data(), this->transferdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TransferBase;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.TransferBase TransferBase = 4;
      case 4: {
        if (tag == 34) {
         parse_TransferBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transferbase()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TransferBase;
        if (input->ExpectTag(42)) goto parse_TransferTextInfo;
        break;
      }

      // optional string TransferTextInfo = 5;
      case 5: {
        if (tag == 42) {
         parse_TransferTextInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfertextinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transfertextinfo().data(), this->transfertextinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transfertextinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Waybill;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybill = 6;
      case 6: {
        if (tag == 50) {
         parse_Waybill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_waybill()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Waybill;
        if (input->ExpectTag(58)) goto parse_Carrier;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 7;
      case 7: {
        if (tag == 58) {
         parse_Carrier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_carrier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Employee;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 8;
      case 8: {
        if (tag == 66) {
         parse_Employee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_employee()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_OtherIssuer;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 9;
      case 9: {
        if (tag == 74) {
         parse_OtherIssuer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_otherissuer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_CreatedThingTransferDate;
        break;
      }

      // optional string CreatedThingTransferDate = 10;
      case 10: {
        if (tag == 82) {
         parse_CreatedThingTransferDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdthingtransferdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdthingtransferdate().data(), this->createdthingtransferdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdthingtransferdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_CreatedThingInfo;
        break;
      }

      // optional string CreatedThingInfo = 11;
      case 11: {
        if (tag == 90) {
         parse_CreatedThingInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdthinginfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdthinginfo().data(), this->createdthinginfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdthinginfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 12;
      case 12: {
        if (tag == 98) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TransferInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TransferInfo)
  return false;
#undef DO_
}

void TransferInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TransferInfo)
  // required string OperationInfo = 1;
  if (has_operationinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationinfo().data(), this->operationinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operationinfo(), output);
  }

  // optional string OperationType = 2;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->operationtype(), output);
  }

  // optional string TransferDate = 3;
  if (has_transferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdate().data(), this->transferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->transferdate(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.TransferBase TransferBase = 4;
  for (int i = 0; i < this->transferbase_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->transferbase(i), output);
  }

  // optional string TransferTextInfo = 5;
  if (has_transfertextinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transfertextinfo().data(), this->transfertextinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transfertextinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->transfertextinfo(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybill = 6;
  for (int i = 0; i < this->waybill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->waybill(i), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 7;
  if (has_carrier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->carrier(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 8;
  if (has_employee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->employee(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 9;
  if (has_otherissuer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->otherissuer(), output);
  }

  // optional string CreatedThingTransferDate = 10;
  if (has_createdthingtransferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthingtransferdate().data(), this->createdthingtransferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthingtransferdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->createdthingtransferdate(), output);
  }

  // optional string CreatedThingInfo = 11;
  if (has_createdthinginfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthinginfo().data(), this->createdthinginfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthinginfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->createdthinginfo(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 12;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->additionalinfoid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TransferInfo)
}

::google::protobuf::uint8* TransferInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TransferInfo)
  // required string OperationInfo = 1;
  if (has_operationinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationinfo().data(), this->operationinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operationinfo(), target);
  }

  // optional string OperationType = 2;
  if (has_operationtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationtype().data(), this->operationtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->operationtype(), target);
  }

  // optional string TransferDate = 3;
  if (has_transferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdate().data(), this->transferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transferdate(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.TransferBase TransferBase = 4;
  for (int i = 0; i < this->transferbase_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->transferbase(i), target);
  }

  // optional string TransferTextInfo = 5;
  if (has_transfertextinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transfertextinfo().data(), this->transfertextinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transfertextinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->transfertextinfo(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybill = 6;
  for (int i = 0; i < this->waybill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->waybill(i), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 7;
  if (has_carrier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->carrier(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 8;
  if (has_employee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->employee(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 9;
  if (has_otherissuer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->otherissuer(), target);
  }

  // optional string CreatedThingTransferDate = 10;
  if (has_createdthingtransferdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthingtransferdate().data(), this->createdthingtransferdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthingtransferdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->createdthingtransferdate(), target);
  }

  // optional string CreatedThingInfo = 11;
  if (has_createdthinginfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdthinginfo().data(), this->createdthinginfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdthinginfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->createdthinginfo(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 12;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->additionalinfoid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TransferInfo)
  return target;
}

int TransferInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string OperationInfo = 1;
    if (has_operationinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationinfo());
    }

    // optional string OperationType = 2;
    if (has_operationtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationtype());
    }

    // optional string TransferDate = 3;
    if (has_transferdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferdate());
    }

    // optional string TransferTextInfo = 5;
    if (has_transfertextinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transfertextinfo());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Organizations.ExtendedOrganizationInfo Carrier = 7;
    if (has_carrier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->carrier());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 8;
    if (has_employee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->employee());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 9;
    if (has_otherissuer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->otherissuer());
    }

    // optional string CreatedThingTransferDate = 10;
    if (has_createdthingtransferdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdthingtransferdate());
    }

    // optional string CreatedThingInfo = 11;
    if (has_createdthinginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdthinginfo());
    }

    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 12;
    if (has_additionalinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.TransferBase TransferBase = 4;
  total_size += 1 * this->transferbase_size();
  for (int i = 0; i < this->transferbase_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transferbase(i));
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Waybill Waybill = 6;
  total_size += 1 * this->waybill_size();
  for (int i = 0; i < this->waybill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->waybill(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TransferInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransferInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransferInfo::MergeFrom(const TransferInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  transferbase_.MergeFrom(from.transferbase_);
  waybill_.MergeFrom(from.waybill_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operationinfo()) {
      set_operationinfo(from.operationinfo());
    }
    if (from.has_operationtype()) {
      set_operationtype(from.operationtype());
    }
    if (from.has_transferdate()) {
      set_transferdate(from.transferdate());
    }
    if (from.has_transfertextinfo()) {
      set_transfertextinfo(from.transfertextinfo());
    }
    if (from.has_carrier()) {
      mutable_carrier()->::Diadoc::Api::Proto::Invoicing::Organizations::ExtendedOrganizationInfo::MergeFrom(from.carrier());
    }
    if (from.has_employee()) {
      mutable_employee()->::Diadoc::Api::Proto::Invoicing::Employee::MergeFrom(from.employee());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_otherissuer()) {
      mutable_otherissuer()->::Diadoc::Api::Proto::Invoicing::OtherIssuer::MergeFrom(from.otherissuer());
    }
    if (from.has_createdthingtransferdate()) {
      set_createdthingtransferdate(from.createdthingtransferdate());
    }
    if (from.has_createdthinginfo()) {
      set_createdthinginfo(from.createdthinginfo());
    }
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TransferInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferInfo::CopyFrom(const TransferInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->transferbase())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->waybill())) return false;
  if (has_carrier()) {
    if (!this->carrier().IsInitialized()) return false;
  }
  if (has_employee()) {
    if (!this->employee().IsInitialized()) return false;
  }
  if (has_otherissuer()) {
    if (!this->otherissuer().IsInitialized()) return false;
  }
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  return true;
}

void TransferInfo::Swap(TransferInfo* other) {
  if (other != this) {
    std::swap(operationinfo_, other->operationinfo_);
    std::swap(operationtype_, other->operationtype_);
    std::swap(transferdate_, other->transferdate_);
    transferbase_.Swap(&other->transferbase_);
    std::swap(transfertextinfo_, other->transfertextinfo_);
    waybill_.Swap(&other->waybill_);
    std::swap(carrier_, other->carrier_);
    std::swap(employee_, other->employee_);
    std::swap(otherissuer_, other->otherissuer_);
    std::swap(createdthingtransferdate_, other->createdthingtransferdate_);
    std::swap(createdthinginfo_, other->createdthinginfo_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TransferInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferInfo_descriptor_;
  metadata.reflection = TransferInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TransferBase::kBaseDocumentNameFieldNumber;
const int TransferBase::kBaseDocumentNumberFieldNumber;
const int TransferBase::kBaseDocumentDateFieldNumber;
const int TransferBase::kBaseDocumentInfoFieldNumber;
#endif  // !_MSC_VER

TransferBase::TransferBase()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.TransferBase)
}

void TransferBase::InitAsDefaultInstance() {
}

TransferBase::TransferBase(const TransferBase& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.TransferBase)
}

void TransferBase::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basedocumentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basedocumentnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basedocumentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basedocumentinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransferBase::~TransferBase() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.TransferBase)
  SharedDtor();
}

void TransferBase::SharedDtor() {
  if (basedocumentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete basedocumentname_;
  }
  if (basedocumentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete basedocumentnumber_;
  }
  if (basedocumentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete basedocumentdate_;
  }
  if (basedocumentinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete basedocumentinfo_;
  }
  if (this != default_instance_) {
  }
}

void TransferBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferBase_descriptor_;
}

const TransferBase& TransferBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

TransferBase* TransferBase::default_instance_ = NULL;

TransferBase* TransferBase::New() const {
  return new TransferBase;
}

void TransferBase::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_basedocumentname()) {
      if (basedocumentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        basedocumentname_->clear();
      }
    }
    if (has_basedocumentnumber()) {
      if (basedocumentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        basedocumentnumber_->clear();
      }
    }
    if (has_basedocumentdate()) {
      if (basedocumentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        basedocumentdate_->clear();
      }
    }
    if (has_basedocumentinfo()) {
      if (basedocumentinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        basedocumentinfo_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TransferBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.TransferBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string BaseDocumentName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_basedocumentname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->basedocumentname().data(), this->basedocumentname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "basedocumentname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_BaseDocumentNumber;
        break;
      }

      // optional string BaseDocumentNumber = 2;
      case 2: {
        if (tag == 18) {
         parse_BaseDocumentNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_basedocumentnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->basedocumentnumber().data(), this->basedocumentnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "basedocumentnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BaseDocumentDate;
        break;
      }

      // optional string BaseDocumentDate = 3;
      case 3: {
        if (tag == 26) {
         parse_BaseDocumentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_basedocumentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->basedocumentdate().data(), this->basedocumentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "basedocumentdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BaseDocumentInfo;
        break;
      }

      // optional string BaseDocumentInfo = 4;
      case 4: {
        if (tag == 34) {
         parse_BaseDocumentInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_basedocumentinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->basedocumentinfo().data(), this->basedocumentinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "basedocumentinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.TransferBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.TransferBase)
  return false;
#undef DO_
}

void TransferBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.TransferBase)
  // required string BaseDocumentName = 1;
  if (has_basedocumentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentname().data(), this->basedocumentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->basedocumentname(), output);
  }

  // optional string BaseDocumentNumber = 2;
  if (has_basedocumentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentnumber().data(), this->basedocumentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->basedocumentnumber(), output);
  }

  // optional string BaseDocumentDate = 3;
  if (has_basedocumentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentdate().data(), this->basedocumentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->basedocumentdate(), output);
  }

  // optional string BaseDocumentInfo = 4;
  if (has_basedocumentinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentinfo().data(), this->basedocumentinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->basedocumentinfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.TransferBase)
}

::google::protobuf::uint8* TransferBase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.TransferBase)
  // required string BaseDocumentName = 1;
  if (has_basedocumentname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentname().data(), this->basedocumentname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->basedocumentname(), target);
  }

  // optional string BaseDocumentNumber = 2;
  if (has_basedocumentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentnumber().data(), this->basedocumentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->basedocumentnumber(), target);
  }

  // optional string BaseDocumentDate = 3;
  if (has_basedocumentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentdate().data(), this->basedocumentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->basedocumentdate(), target);
  }

  // optional string BaseDocumentInfo = 4;
  if (has_basedocumentinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->basedocumentinfo().data(), this->basedocumentinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "basedocumentinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->basedocumentinfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.TransferBase)
  return target;
}

int TransferBase::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string BaseDocumentName = 1;
    if (has_basedocumentname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->basedocumentname());
    }

    // optional string BaseDocumentNumber = 2;
    if (has_basedocumentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->basedocumentnumber());
    }

    // optional string BaseDocumentDate = 3;
    if (has_basedocumentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->basedocumentdate());
    }

    // optional string BaseDocumentInfo = 4;
    if (has_basedocumentinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->basedocumentinfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferBase::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TransferBase* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransferBase*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransferBase::MergeFrom(const TransferBase& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basedocumentname()) {
      set_basedocumentname(from.basedocumentname());
    }
    if (from.has_basedocumentnumber()) {
      set_basedocumentnumber(from.basedocumentnumber());
    }
    if (from.has_basedocumentdate()) {
      set_basedocumentdate(from.basedocumentdate());
    }
    if (from.has_basedocumentinfo()) {
      set_basedocumentinfo(from.basedocumentinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TransferBase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferBase::CopyFrom(const TransferBase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferBase::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TransferBase::Swap(TransferBase* other) {
  if (other != this) {
    std::swap(basedocumentname_, other->basedocumentname_);
    std::swap(basedocumentnumber_, other->basedocumentnumber_);
    std::swap(basedocumentdate_, other->basedocumentdate_);
    std::swap(basedocumentinfo_, other->basedocumentinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TransferBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferBase_descriptor_;
  metadata.reflection = TransferBase_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Waybill::kTransferDocumentNumberFieldNumber;
const int Waybill::kTransferDocumentDateFieldNumber;
#endif  // !_MSC_VER

Waybill::Waybill()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.Waybill)
}

void Waybill::InitAsDefaultInstance() {
}

Waybill::Waybill(const Waybill& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.Waybill)
}

void Waybill::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  transferdocumentnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferdocumentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Waybill::~Waybill() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.Waybill)
  SharedDtor();
}

void Waybill::SharedDtor() {
  if (transferdocumentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferdocumentnumber_;
  }
  if (transferdocumentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferdocumentdate_;
  }
  if (this != default_instance_) {
  }
}

void Waybill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Waybill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Waybill_descriptor_;
}

const Waybill& Waybill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

Waybill* Waybill::default_instance_ = NULL;

Waybill* Waybill::New() const {
  return new Waybill;
}

void Waybill::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_transferdocumentnumber()) {
      if (transferdocumentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferdocumentnumber_->clear();
      }
    }
    if (has_transferdocumentdate()) {
      if (transferdocumentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferdocumentdate_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Waybill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.Waybill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string TransferDocumentNumber = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferdocumentnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferdocumentnumber().data(), this->transferdocumentnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferdocumentnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TransferDocumentDate;
        break;
      }

      // required string TransferDocumentDate = 2;
      case 2: {
        if (tag == 18) {
         parse_TransferDocumentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferdocumentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferdocumentdate().data(), this->transferdocumentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferdocumentdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.Waybill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.Waybill)
  return false;
#undef DO_
}

void Waybill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.Waybill)
  // required string TransferDocumentNumber = 1;
  if (has_transferdocumentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdocumentnumber().data(), this->transferdocumentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdocumentnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->transferdocumentnumber(), output);
  }

  // required string TransferDocumentDate = 2;
  if (has_transferdocumentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdocumentdate().data(), this->transferdocumentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdocumentdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transferdocumentdate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.Waybill)
}

::google::protobuf::uint8* Waybill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.Waybill)
  // required string TransferDocumentNumber = 1;
  if (has_transferdocumentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdocumentnumber().data(), this->transferdocumentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdocumentnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transferdocumentnumber(), target);
  }

  // required string TransferDocumentDate = 2;
  if (has_transferdocumentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferdocumentdate().data(), this->transferdocumentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferdocumentdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transferdocumentdate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.Waybill)
  return target;
}

int Waybill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string TransferDocumentNumber = 1;
    if (has_transferdocumentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferdocumentnumber());
    }

    // required string TransferDocumentDate = 2;
    if (has_transferdocumentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferdocumentdate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Waybill::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Waybill* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Waybill*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Waybill::MergeFrom(const Waybill& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transferdocumentnumber()) {
      set_transferdocumentnumber(from.transferdocumentnumber());
    }
    if (from.has_transferdocumentdate()) {
      set_transferdocumentdate(from.transferdocumentdate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Waybill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waybill::CopyFrom(const Waybill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waybill::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Waybill::Swap(Waybill* other) {
  if (other != this) {
    std::swap(transferdocumentnumber_, other->transferdocumentnumber_);
    std::swap(transferdocumentdate_, other->transferdocumentdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Waybill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Waybill_descriptor_;
  metadata.reflection = Waybill_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Employee::kEmployeePositionFieldNumber;
const int Employee::kEmployeeInfoFieldNumber;
const int Employee::kEmployeeBaseFieldNumber;
const int Employee::kTransferSurnameFieldNumber;
const int Employee::kTransferFirstNameFieldNumber;
const int Employee::kTransferPatronymicFieldNumber;
#endif  // !_MSC_VER

Employee::Employee()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.Employee)
}

void Employee::InitAsDefaultInstance() {
}

Employee::Employee(const Employee& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.Employee)
}

void Employee::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  employeeposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employeeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employeebase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfersurname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferfirstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferpatronymic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Employee::~Employee() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.Employee)
  SharedDtor();
}

void Employee::SharedDtor() {
  if (employeeposition_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete employeeposition_;
  }
  if (employeeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete employeeinfo_;
  }
  if (employeebase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete employeebase_;
  }
  if (transfersurname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transfersurname_;
  }
  if (transferfirstname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferfirstname_;
  }
  if (transferpatronymic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferpatronymic_;
  }
  if (this != default_instance_) {
  }
}

void Employee::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Employee::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Employee_descriptor_;
}

const Employee& Employee::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

Employee* Employee::default_instance_ = NULL;

Employee* Employee::New() const {
  return new Employee;
}

void Employee::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    if (has_employeeposition()) {
      if (employeeposition_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        employeeposition_->clear();
      }
    }
    if (has_employeeinfo()) {
      if (employeeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        employeeinfo_->clear();
      }
    }
    if (has_employeebase()) {
      if (employeebase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        employeebase_->clear();
      }
    }
    if (has_transfersurname()) {
      if (transfersurname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transfersurname_->clear();
      }
    }
    if (has_transferfirstname()) {
      if (transferfirstname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferfirstname_->clear();
      }
    }
    if (has_transferpatronymic()) {
      if (transferpatronymic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferpatronymic_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Employee::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.Employee)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string EmployeePosition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_employeeposition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->employeeposition().data(), this->employeeposition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "employeeposition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EmployeeInfo;
        break;
      }

      // optional string EmployeeInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_EmployeeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_employeeinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->employeeinfo().data(), this->employeeinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "employeeinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_EmployeeBase;
        break;
      }

      // optional string EmployeeBase = 3;
      case 3: {
        if (tag == 26) {
         parse_EmployeeBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_employeebase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->employeebase().data(), this->employeebase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "employeebase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TransferSurname;
        break;
      }

      // required string TransferSurname = 4;
      case 4: {
        if (tag == 34) {
         parse_TransferSurname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfersurname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transfersurname().data(), this->transfersurname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transfersurname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TransferFirstName;
        break;
      }

      // required string TransferFirstName = 5;
      case 5: {
        if (tag == 42) {
         parse_TransferFirstName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferfirstname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferfirstname().data(), this->transferfirstname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferfirstname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_TransferPatronymic;
        break;
      }

      // optional string TransferPatronymic = 6;
      case 6: {
        if (tag == 50) {
         parse_TransferPatronymic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferpatronymic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferpatronymic().data(), this->transferpatronymic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferpatronymic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.Employee)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.Employee)
  return false;
#undef DO_
}

void Employee::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.Employee)
  // required string EmployeePosition = 1;
  if (has_employeeposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->employeeposition().data(), this->employeeposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "employeeposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->employeeposition(), output);
  }

  // optional string EmployeeInfo = 2;
  if (has_employeeinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->employeeinfo().data(), this->employeeinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "employeeinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->employeeinfo(), output);
  }

  // optional string EmployeeBase = 3;
  if (has_employeebase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->employeebase().data(), this->employeebase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "employeebase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->employeebase(), output);
  }

  // required string TransferSurname = 4;
  if (has_transfersurname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transfersurname().data(), this->transfersurname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transfersurname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->transfersurname(), output);
  }

  // required string TransferFirstName = 5;
  if (has_transferfirstname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferfirstname().data(), this->transferfirstname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferfirstname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->transferfirstname(), output);
  }

  // optional string TransferPatronymic = 6;
  if (has_transferpatronymic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferpatronymic().data(), this->transferpatronymic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferpatronymic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->transferpatronymic(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.Employee)
}

::google::protobuf::uint8* Employee::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.Employee)
  // required string EmployeePosition = 1;
  if (has_employeeposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->employeeposition().data(), this->employeeposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "employeeposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->employeeposition(), target);
  }

  // optional string EmployeeInfo = 2;
  if (has_employeeinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->employeeinfo().data(), this->employeeinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "employeeinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->employeeinfo(), target);
  }

  // optional string EmployeeBase = 3;
  if (has_employeebase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->employeebase().data(), this->employeebase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "employeebase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->employeebase(), target);
  }

  // required string TransferSurname = 4;
  if (has_transfersurname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transfersurname().data(), this->transfersurname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transfersurname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->transfersurname(), target);
  }

  // required string TransferFirstName = 5;
  if (has_transferfirstname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferfirstname().data(), this->transferfirstname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferfirstname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->transferfirstname(), target);
  }

  // optional string TransferPatronymic = 6;
  if (has_transferpatronymic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferpatronymic().data(), this->transferpatronymic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferpatronymic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->transferpatronymic(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.Employee)
  return target;
}

int Employee::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string EmployeePosition = 1;
    if (has_employeeposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->employeeposition());
    }

    // optional string EmployeeInfo = 2;
    if (has_employeeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->employeeinfo());
    }

    // optional string EmployeeBase = 3;
    if (has_employeebase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->employeebase());
    }

    // required string TransferSurname = 4;
    if (has_transfersurname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transfersurname());
    }

    // required string TransferFirstName = 5;
    if (has_transferfirstname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferfirstname());
    }

    // optional string TransferPatronymic = 6;
    if (has_transferpatronymic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferpatronymic());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Employee::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Employee* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Employee*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Employee::MergeFrom(const Employee& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_employeeposition()) {
      set_employeeposition(from.employeeposition());
    }
    if (from.has_employeeinfo()) {
      set_employeeinfo(from.employeeinfo());
    }
    if (from.has_employeebase()) {
      set_employeebase(from.employeebase());
    }
    if (from.has_transfersurname()) {
      set_transfersurname(from.transfersurname());
    }
    if (from.has_transferfirstname()) {
      set_transferfirstname(from.transferfirstname());
    }
    if (from.has_transferpatronymic()) {
      set_transferpatronymic(from.transferpatronymic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Employee::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Employee::CopyFrom(const Employee& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Employee::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000019) != 0x00000019) return false;

  return true;
}

void Employee::Swap(Employee* other) {
  if (other != this) {
    std::swap(employeeposition_, other->employeeposition_);
    std::swap(employeeinfo_, other->employeeinfo_);
    std::swap(employeebase_, other->employeebase_);
    std::swap(transfersurname_, other->transfersurname_);
    std::swap(transferfirstname_, other->transferfirstname_);
    std::swap(transferpatronymic_, other->transferpatronymic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Employee::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Employee_descriptor_;
  metadata.reflection = Employee_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OtherIssuer::kTransferEmployeePositionFieldNumber;
const int OtherIssuer::kTransferEmployeeInfoFieldNumber;
const int OtherIssuer::kTransferOrganizationNameFieldNumber;
const int OtherIssuer::kTransferOrganizationBaseFieldNumber;
const int OtherIssuer::kTransferEmployeeBaseFieldNumber;
const int OtherIssuer::kTransferSurnameFieldNumber;
const int OtherIssuer::kTransferFirstNameFieldNumber;
const int OtherIssuer::kTransferPatronymicFieldNumber;
#endif  // !_MSC_VER

OtherIssuer::OtherIssuer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.OtherIssuer)
}

void OtherIssuer::InitAsDefaultInstance() {
}

OtherIssuer::OtherIssuer(const OtherIssuer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.OtherIssuer)
}

void OtherIssuer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  transferemployeeposition_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferemployeeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferorganizationname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferorganizationbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferemployeebase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfersurname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferfirstname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transferpatronymic_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OtherIssuer::~OtherIssuer() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  SharedDtor();
}

void OtherIssuer::SharedDtor() {
  if (transferemployeeposition_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferemployeeposition_;
  }
  if (transferemployeeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferemployeeinfo_;
  }
  if (transferorganizationname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferorganizationname_;
  }
  if (transferorganizationbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferorganizationbase_;
  }
  if (transferemployeebase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferemployeebase_;
  }
  if (transfersurname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transfersurname_;
  }
  if (transferfirstname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferfirstname_;
  }
  if (transferpatronymic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transferpatronymic_;
  }
  if (this != default_instance_) {
  }
}

void OtherIssuer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OtherIssuer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OtherIssuer_descriptor_;
}

const OtherIssuer& OtherIssuer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

OtherIssuer* OtherIssuer::default_instance_ = NULL;

OtherIssuer* OtherIssuer::New() const {
  return new OtherIssuer;
}

void OtherIssuer::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_transferemployeeposition()) {
      if (transferemployeeposition_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferemployeeposition_->clear();
      }
    }
    if (has_transferemployeeinfo()) {
      if (transferemployeeinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferemployeeinfo_->clear();
      }
    }
    if (has_transferorganizationname()) {
      if (transferorganizationname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferorganizationname_->clear();
      }
    }
    if (has_transferorganizationbase()) {
      if (transferorganizationbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferorganizationbase_->clear();
      }
    }
    if (has_transferemployeebase()) {
      if (transferemployeebase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferemployeebase_->clear();
      }
    }
    if (has_transfersurname()) {
      if (transfersurname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transfersurname_->clear();
      }
    }
    if (has_transferfirstname()) {
      if (transferfirstname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferfirstname_->clear();
      }
    }
    if (has_transferpatronymic()) {
      if (transferpatronymic_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        transferpatronymic_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OtherIssuer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string TransferEmployeePosition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferemployeeposition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferemployeeposition().data(), this->transferemployeeposition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferemployeeposition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_TransferEmployeeInfo;
        break;
      }

      // optional string TransferEmployeeInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_TransferEmployeeInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferemployeeinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferemployeeinfo().data(), this->transferemployeeinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferemployeeinfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TransferOrganizationName;
        break;
      }

      // optional string TransferOrganizationName = 3;
      case 3: {
        if (tag == 26) {
         parse_TransferOrganizationName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferorganizationname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferorganizationname().data(), this->transferorganizationname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferorganizationname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_TransferOrganizationBase;
        break;
      }

      // optional string TransferOrganizationBase = 4;
      case 4: {
        if (tag == 34) {
         parse_TransferOrganizationBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferorganizationbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferorganizationbase().data(), this->transferorganizationbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferorganizationbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_TransferEmployeeBase;
        break;
      }

      // optional string TransferEmployeeBase = 5;
      case 5: {
        if (tag == 42) {
         parse_TransferEmployeeBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferemployeebase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferemployeebase().data(), this->transferemployeebase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferemployeebase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_TransferSurname;
        break;
      }

      // required string TransferSurname = 6;
      case 6: {
        if (tag == 50) {
         parse_TransferSurname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfersurname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transfersurname().data(), this->transfersurname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transfersurname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_TransferFirstName;
        break;
      }

      // required string TransferFirstName = 7;
      case 7: {
        if (tag == 58) {
         parse_TransferFirstName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferfirstname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferfirstname().data(), this->transferfirstname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferfirstname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_TransferPatronymic;
        break;
      }

      // optional string TransferPatronymic = 8;
      case 8: {
        if (tag == 66) {
         parse_TransferPatronymic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transferpatronymic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transferpatronymic().data(), this->transferpatronymic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transferpatronymic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  return false;
#undef DO_
}

void OtherIssuer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  // optional string TransferEmployeePosition = 1;
  if (has_transferemployeeposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferemployeeposition().data(), this->transferemployeeposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferemployeeposition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->transferemployeeposition(), output);
  }

  // optional string TransferEmployeeInfo = 2;
  if (has_transferemployeeinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferemployeeinfo().data(), this->transferemployeeinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferemployeeinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transferemployeeinfo(), output);
  }

  // optional string TransferOrganizationName = 3;
  if (has_transferorganizationname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferorganizationname().data(), this->transferorganizationname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferorganizationname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->transferorganizationname(), output);
  }

  // optional string TransferOrganizationBase = 4;
  if (has_transferorganizationbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferorganizationbase().data(), this->transferorganizationbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferorganizationbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->transferorganizationbase(), output);
  }

  // optional string TransferEmployeeBase = 5;
  if (has_transferemployeebase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferemployeebase().data(), this->transferemployeebase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferemployeebase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->transferemployeebase(), output);
  }

  // required string TransferSurname = 6;
  if (has_transfersurname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transfersurname().data(), this->transfersurname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transfersurname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->transfersurname(), output);
  }

  // required string TransferFirstName = 7;
  if (has_transferfirstname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferfirstname().data(), this->transferfirstname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferfirstname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->transferfirstname(), output);
  }

  // optional string TransferPatronymic = 8;
  if (has_transferpatronymic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferpatronymic().data(), this->transferpatronymic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferpatronymic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->transferpatronymic(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.OtherIssuer)
}

::google::protobuf::uint8* OtherIssuer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  // optional string TransferEmployeePosition = 1;
  if (has_transferemployeeposition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferemployeeposition().data(), this->transferemployeeposition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferemployeeposition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transferemployeeposition(), target);
  }

  // optional string TransferEmployeeInfo = 2;
  if (has_transferemployeeinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferemployeeinfo().data(), this->transferemployeeinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferemployeeinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transferemployeeinfo(), target);
  }

  // optional string TransferOrganizationName = 3;
  if (has_transferorganizationname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferorganizationname().data(), this->transferorganizationname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferorganizationname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transferorganizationname(), target);
  }

  // optional string TransferOrganizationBase = 4;
  if (has_transferorganizationbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferorganizationbase().data(), this->transferorganizationbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferorganizationbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->transferorganizationbase(), target);
  }

  // optional string TransferEmployeeBase = 5;
  if (has_transferemployeebase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferemployeebase().data(), this->transferemployeebase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferemployeebase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->transferemployeebase(), target);
  }

  // required string TransferSurname = 6;
  if (has_transfersurname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transfersurname().data(), this->transfersurname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transfersurname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->transfersurname(), target);
  }

  // required string TransferFirstName = 7;
  if (has_transferfirstname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferfirstname().data(), this->transferfirstname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferfirstname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->transferfirstname(), target);
  }

  // optional string TransferPatronymic = 8;
  if (has_transferpatronymic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transferpatronymic().data(), this->transferpatronymic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transferpatronymic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->transferpatronymic(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.OtherIssuer)
  return target;
}

int OtherIssuer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string TransferEmployeePosition = 1;
    if (has_transferemployeeposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferemployeeposition());
    }

    // optional string TransferEmployeeInfo = 2;
    if (has_transferemployeeinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferemployeeinfo());
    }

    // optional string TransferOrganizationName = 3;
    if (has_transferorganizationname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferorganizationname());
    }

    // optional string TransferOrganizationBase = 4;
    if (has_transferorganizationbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferorganizationbase());
    }

    // optional string TransferEmployeeBase = 5;
    if (has_transferemployeebase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferemployeebase());
    }

    // required string TransferSurname = 6;
    if (has_transfersurname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transfersurname());
    }

    // required string TransferFirstName = 7;
    if (has_transferfirstname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferfirstname());
    }

    // optional string TransferPatronymic = 8;
    if (has_transferpatronymic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->transferpatronymic());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OtherIssuer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OtherIssuer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OtherIssuer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OtherIssuer::MergeFrom(const OtherIssuer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transferemployeeposition()) {
      set_transferemployeeposition(from.transferemployeeposition());
    }
    if (from.has_transferemployeeinfo()) {
      set_transferemployeeinfo(from.transferemployeeinfo());
    }
    if (from.has_transferorganizationname()) {
      set_transferorganizationname(from.transferorganizationname());
    }
    if (from.has_transferorganizationbase()) {
      set_transferorganizationbase(from.transferorganizationbase());
    }
    if (from.has_transferemployeebase()) {
      set_transferemployeebase(from.transferemployeebase());
    }
    if (from.has_transfersurname()) {
      set_transfersurname(from.transfersurname());
    }
    if (from.has_transferfirstname()) {
      set_transferfirstname(from.transferfirstname());
    }
    if (from.has_transferpatronymic()) {
      set_transferpatronymic(from.transferpatronymic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OtherIssuer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherIssuer::CopyFrom(const OtherIssuer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherIssuer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000060) != 0x00000060) return false;

  return true;
}

void OtherIssuer::Swap(OtherIssuer* other) {
  if (other != this) {
    std::swap(transferemployeeposition_, other->transferemployeeposition_);
    std::swap(transferemployeeinfo_, other->transferemployeeinfo_);
    std::swap(transferorganizationname_, other->transferorganizationname_);
    std::swap(transferorganizationbase_, other->transferorganizationbase_);
    std::swap(transferemployeebase_, other->transferemployeebase_);
    std::swap(transfersurname_, other->transfersurname_);
    std::swap(transferfirstname_, other->transferfirstname_);
    std::swap(transferpatronymic_, other->transferpatronymic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OtherIssuer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OtherIssuer_descriptor_;
  metadata.reflection = OtherIssuer_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AdditionalInfoId::kInfoFileIdFieldNumber;
const int AdditionalInfoId::kAdditionalInfoFieldNumber;
#endif  // !_MSC_VER

AdditionalInfoId::AdditionalInfoId()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
}

void AdditionalInfoId::InitAsDefaultInstance() {
}

AdditionalInfoId::AdditionalInfoId(const AdditionalInfoId& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
}

void AdditionalInfoId::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  infofileid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdditionalInfoId::~AdditionalInfoId() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  SharedDtor();
}

void AdditionalInfoId::SharedDtor() {
  if (infofileid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete infofileid_;
  }
  if (this != default_instance_) {
  }
}

void AdditionalInfoId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdditionalInfoId::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdditionalInfoId_descriptor_;
}

const AdditionalInfoId& AdditionalInfoId::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

AdditionalInfoId* AdditionalInfoId::default_instance_ = NULL;

AdditionalInfoId* AdditionalInfoId::New() const {
  return new AdditionalInfoId;
}

void AdditionalInfoId::Clear() {
  if (has_infofileid()) {
    if (infofileid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      infofileid_->clear();
    }
  }
  additionalinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AdditionalInfoId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string InfoFileId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_infofileid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->infofileid().data(), this->infofileid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "infofileid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AdditionalInfo;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_AdditionalInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additionalinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AdditionalInfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  return false;
#undef DO_
}

void AdditionalInfoId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  // optional string InfoFileId = 1;
  if (has_infofileid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infofileid().data(), this->infofileid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "infofileid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->infofileid(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 2;
  for (int i = 0; i < this->additionalinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->additionalinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
}

::google::protobuf::uint8* AdditionalInfoId::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  // optional string InfoFileId = 1;
  if (has_infofileid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->infofileid().data(), this->infofileid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "infofileid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->infofileid(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 2;
  for (int i = 0; i < this->additionalinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->additionalinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.AdditionalInfoId)
  return target;
}

int AdditionalInfoId::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string InfoFileId = 1;
    if (has_infofileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->infofileid());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.AdditionalInfo AdditionalInfo = 2;
  total_size += 1 * this->additionalinfo_size();
  for (int i = 0; i < this->additionalinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->additionalinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdditionalInfoId::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AdditionalInfoId* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AdditionalInfoId*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AdditionalInfoId::MergeFrom(const AdditionalInfoId& from) {
  GOOGLE_CHECK_NE(&from, this);
  additionalinfo_.MergeFrom(from.additionalinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_infofileid()) {
      set_infofileid(from.infofileid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AdditionalInfoId::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdditionalInfoId::CopyFrom(const AdditionalInfoId& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdditionalInfoId::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->additionalinfo())) return false;
  return true;
}

void AdditionalInfoId::Swap(AdditionalInfoId* other) {
  if (other != this) {
    std::swap(infofileid_, other->infofileid_);
    additionalinfo_.Swap(&other->additionalinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AdditionalInfoId::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdditionalInfoId_descriptor_;
  metadata.reflection = AdditionalInfoId_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UniversalTransferDocumentBuyerTitleInfo::kDocumentCreatorFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kDocumentCreatorBaseFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kOperationCodeFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kOperationContentFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kAcceptanceDateFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kEmployeeFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kOtherIssuerFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kAdditionalInfoIdFieldNumber;
const int UniversalTransferDocumentBuyerTitleInfo::kSignersFieldNumber;
#endif  // !_MSC_VER

UniversalTransferDocumentBuyerTitleInfo::UniversalTransferDocumentBuyerTitleInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
}

void UniversalTransferDocumentBuyerTitleInfo::InitAsDefaultInstance() {
  employee_ = const_cast< ::Diadoc::Api::Proto::Invoicing::Employee*>(&::Diadoc::Api::Proto::Invoicing::Employee::default_instance());
  otherissuer_ = const_cast< ::Diadoc::Api::Proto::Invoicing::OtherIssuer*>(&::Diadoc::Api::Proto::Invoicing::OtherIssuer::default_instance());
  additionalinfoid_ = const_cast< ::Diadoc::Api::Proto::Invoicing::AdditionalInfoId*>(&::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::default_instance());
}

UniversalTransferDocumentBuyerTitleInfo::UniversalTransferDocumentBuyerTitleInfo(const UniversalTransferDocumentBuyerTitleInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
}

void UniversalTransferDocumentBuyerTitleInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  documentcreator_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentcreatorbase_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operationcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acceptancedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_ = NULL;
  otherissuer_ = NULL;
  additionalinfoid_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UniversalTransferDocumentBuyerTitleInfo::~UniversalTransferDocumentBuyerTitleInfo() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  SharedDtor();
}

void UniversalTransferDocumentBuyerTitleInfo::SharedDtor() {
  if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreator_;
  }
  if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentcreatorbase_;
  }
  if (operationcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationcode_;
  }
  if (operationcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete operationcontent_;
  }
  if (acceptancedate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete acceptancedate_;
  }
  if (this != default_instance_) {
    delete employee_;
    delete otherissuer_;
    delete additionalinfoid_;
  }
}

void UniversalTransferDocumentBuyerTitleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UniversalTransferDocumentBuyerTitleInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UniversalTransferDocumentBuyerTitleInfo_descriptor_;
}

const UniversalTransferDocumentBuyerTitleInfo& UniversalTransferDocumentBuyerTitleInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Invoicing_2fUniversalTransferDocumentInfo_2eproto();
  return *default_instance_;
}

UniversalTransferDocumentBuyerTitleInfo* UniversalTransferDocumentBuyerTitleInfo::default_instance_ = NULL;

UniversalTransferDocumentBuyerTitleInfo* UniversalTransferDocumentBuyerTitleInfo::New() const {
  return new UniversalTransferDocumentBuyerTitleInfo;
}

void UniversalTransferDocumentBuyerTitleInfo::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_documentcreator()) {
      if (documentcreator_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreator_->clear();
      }
    }
    if (has_documentcreatorbase()) {
      if (documentcreatorbase_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentcreatorbase_->clear();
      }
    }
    if (has_operationcode()) {
      if (operationcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationcode_->clear();
      }
    }
    if (has_operationcontent()) {
      if (operationcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        operationcontent_->clear();
      }
    }
    if (has_acceptancedate()) {
      if (acceptancedate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        acceptancedate_->clear();
      }
    }
    if (has_employee()) {
      if (employee_ != NULL) employee_->::Diadoc::Api::Proto::Invoicing::Employee::Clear();
    }
    if (has_otherissuer()) {
      if (otherissuer_ != NULL) otherissuer_->::Diadoc::Api::Proto::Invoicing::OtherIssuer::Clear();
    }
    if (has_additionalinfoid()) {
      if (additionalinfoid_ != NULL) additionalinfoid_->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::Clear();
    }
  }
  signers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UniversalTransferDocumentBuyerTitleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string DocumentCreator = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreator().data(), this->documentcreator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreator");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_DocumentCreatorBase;
        break;
      }

      // optional string DocumentCreatorBase = 2;
      case 2: {
        if (tag == 18) {
         parse_DocumentCreatorBase:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentcreatorbase()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentcreatorbase().data(), this->documentcreatorbase().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentcreatorbase");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_OperationCode;
        break;
      }

      // optional string OperationCode = 3;
      case 3: {
        if (tag == 26) {
         parse_OperationCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationcode().data(), this->operationcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_OperationContent;
        break;
      }

      // required string OperationContent = 4;
      case 4: {
        if (tag == 34) {
         parse_OperationContent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operationcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operationcontent().data(), this->operationcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "operationcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_AcceptanceDate;
        break;
      }

      // optional string AcceptanceDate = 5;
      case 5: {
        if (tag == 42) {
         parse_AcceptanceDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acceptancedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acceptancedate().data(), this->acceptancedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acceptancedate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Employee;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
      case 6: {
        if (tag == 50) {
         parse_Employee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_employee()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_OtherIssuer;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
      case 7: {
        if (tag == 58) {
         parse_OtherIssuer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_otherissuer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_AdditionalInfoId;
        break;
      }

      // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
      case 8: {
        if (tag == 66) {
         parse_AdditionalInfoId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_additionalinfoid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Signers;
        break;
      }

      // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
      case 9: {
        if (tag == 74) {
         parse_Signers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Signers;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  return false;
#undef DO_
}

void UniversalTransferDocumentBuyerTitleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  // required string DocumentCreator = 1;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->documentcreator(), output);
  }

  // optional string DocumentCreatorBase = 2;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->documentcreatorbase(), output);
  }

  // optional string OperationCode = 3;
  if (has_operationcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcode().data(), this->operationcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->operationcode(), output);
  }

  // required string OperationContent = 4;
  if (has_operationcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcontent().data(), this->operationcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->operationcontent(), output);
  }

  // optional string AcceptanceDate = 5;
  if (has_acceptancedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptancedate().data(), this->acceptancedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acceptancedate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->acceptancedate(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
  if (has_employee()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->employee(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
  if (has_otherissuer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->otherissuer(), output);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
  if (has_additionalinfoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->additionalinfoid(), output);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  for (int i = 0; i < this->signers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->signers(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
}

::google::protobuf::uint8* UniversalTransferDocumentBuyerTitleInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  // required string DocumentCreator = 1;
  if (has_documentcreator()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreator().data(), this->documentcreator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->documentcreator(), target);
  }

  // optional string DocumentCreatorBase = 2;
  if (has_documentcreatorbase()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentcreatorbase().data(), this->documentcreatorbase().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentcreatorbase");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->documentcreatorbase(), target);
  }

  // optional string OperationCode = 3;
  if (has_operationcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcode().data(), this->operationcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->operationcode(), target);
  }

  // required string OperationContent = 4;
  if (has_operationcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operationcontent().data(), this->operationcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "operationcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->operationcontent(), target);
  }

  // optional string AcceptanceDate = 5;
  if (has_acceptancedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acceptancedate().data(), this->acceptancedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acceptancedate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->acceptancedate(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
  if (has_employee()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->employee(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
  if (has_otherissuer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->otherissuer(), target);
  }

  // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
  if (has_additionalinfoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->additionalinfoid(), target);
  }

  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  for (int i = 0; i < this->signers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->signers(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Invoicing.UniversalTransferDocumentBuyerTitleInfo)
  return target;
}

int UniversalTransferDocumentBuyerTitleInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string DocumentCreator = 1;
    if (has_documentcreator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreator());
    }

    // optional string DocumentCreatorBase = 2;
    if (has_documentcreatorbase()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentcreatorbase());
    }

    // optional string OperationCode = 3;
    if (has_operationcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationcode());
    }

    // required string OperationContent = 4;
    if (has_operationcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->operationcontent());
    }

    // optional string AcceptanceDate = 5;
    if (has_acceptancedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acceptancedate());
    }

    // optional .Diadoc.Api.Proto.Invoicing.Employee Employee = 6;
    if (has_employee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->employee());
    }

    // optional .Diadoc.Api.Proto.Invoicing.OtherIssuer OtherIssuer = 7;
    if (has_otherissuer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->otherissuer());
    }

    // optional .Diadoc.Api.Proto.Invoicing.AdditionalInfoId AdditionalInfoId = 8;
    if (has_additionalinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additionalinfoid());
    }

  }
  // repeated .Diadoc.Api.Proto.Invoicing.Signers.ExtendedSigner Signers = 9;
  total_size += 1 * this->signers_size();
  for (int i = 0; i < this->signers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signers(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UniversalTransferDocumentBuyerTitleInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UniversalTransferDocumentBuyerTitleInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UniversalTransferDocumentBuyerTitleInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UniversalTransferDocumentBuyerTitleInfo::MergeFrom(const UniversalTransferDocumentBuyerTitleInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  signers_.MergeFrom(from.signers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_documentcreator()) {
      set_documentcreator(from.documentcreator());
    }
    if (from.has_documentcreatorbase()) {
      set_documentcreatorbase(from.documentcreatorbase());
    }
    if (from.has_operationcode()) {
      set_operationcode(from.operationcode());
    }
    if (from.has_operationcontent()) {
      set_operationcontent(from.operationcontent());
    }
    if (from.has_acceptancedate()) {
      set_acceptancedate(from.acceptancedate());
    }
    if (from.has_employee()) {
      mutable_employee()->::Diadoc::Api::Proto::Invoicing::Employee::MergeFrom(from.employee());
    }
    if (from.has_otherissuer()) {
      mutable_otherissuer()->::Diadoc::Api::Proto::Invoicing::OtherIssuer::MergeFrom(from.otherissuer());
    }
    if (from.has_additionalinfoid()) {
      mutable_additionalinfoid()->::Diadoc::Api::Proto::Invoicing::AdditionalInfoId::MergeFrom(from.additionalinfoid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UniversalTransferDocumentBuyerTitleInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UniversalTransferDocumentBuyerTitleInfo::CopyFrom(const UniversalTransferDocumentBuyerTitleInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UniversalTransferDocumentBuyerTitleInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  if (has_employee()) {
    if (!this->employee().IsInitialized()) return false;
  }
  if (has_otherissuer()) {
    if (!this->otherissuer().IsInitialized()) return false;
  }
  if (has_additionalinfoid()) {
    if (!this->additionalinfoid().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->signers())) return false;
  return true;
}

void UniversalTransferDocumentBuyerTitleInfo::Swap(UniversalTransferDocumentBuyerTitleInfo* other) {
  if (other != this) {
    std::swap(documentcreator_, other->documentcreator_);
    std::swap(documentcreatorbase_, other->documentcreatorbase_);
    std::swap(operationcode_, other->operationcode_);
    std::swap(operationcontent_, other->operationcontent_);
    std::swap(acceptancedate_, other->acceptancedate_);
    std::swap(employee_, other->employee_);
    std::swap(otherissuer_, other->otherissuer_);
    std::swap(additionalinfoid_, other->additionalinfoid_);
    signers_.Swap(&other->signers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UniversalTransferDocumentBuyerTitleInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UniversalTransferDocumentBuyerTitleInfo_descriptor_;
  metadata.reflection = UniversalTransferDocumentBuyerTitleInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Invoicing
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
