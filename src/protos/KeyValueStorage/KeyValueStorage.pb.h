// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KeyValueStorage/KeyValueStorage.proto

#ifndef PROTOBUF_KeyValueStorage_2fKeyValueStorage_2eproto__INCLUDED
#define PROTOBUF_KeyValueStorage_2fKeyValueStorage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace KeyValueStorage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
void protobuf_AssignDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
void protobuf_ShutdownFile_KeyValueStorage_2fKeyValueStorage_2eproto();

class KeyValueStorageEntry;
class KeyValueStorageApiGetRequest;
class KeyValueStorageApiGetResponse;
class KeyValueStorageApiPutRequest;

// ===================================================================

class KeyValueStorageEntry : public ::google::protobuf::Message {
 public:
  KeyValueStorageEntry();
  virtual ~KeyValueStorageEntry();
  
  KeyValueStorageEntry(const KeyValueStorageEntry& from);
  
  inline KeyValueStorageEntry& operator=(const KeyValueStorageEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValueStorageEntry& default_instance();
  
  void Swap(KeyValueStorageEntry* other);
  
  // implements Message ----------------------------------------------
  
  KeyValueStorageEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValueStorageEntry& from);
  void MergeFrom(const KeyValueStorageEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string Key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required string Value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageEntry)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_AssignDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_ShutdownFile_KeyValueStorage_2fKeyValueStorage_2eproto();
  
  void InitAsDefaultInstance();
  static KeyValueStorageEntry* default_instance_;
};
// -------------------------------------------------------------------

class KeyValueStorageApiGetRequest : public ::google::protobuf::Message {
 public:
  KeyValueStorageApiGetRequest();
  virtual ~KeyValueStorageApiGetRequest();
  
  KeyValueStorageApiGetRequest(const KeyValueStorageApiGetRequest& from);
  
  inline KeyValueStorageApiGetRequest& operator=(const KeyValueStorageApiGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValueStorageApiGetRequest& default_instance();
  
  void Swap(KeyValueStorageApiGetRequest* other);
  
  // implements Message ----------------------------------------------
  
  KeyValueStorageApiGetRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValueStorageApiGetRequest& from);
  void MergeFrom(const KeyValueStorageApiGetRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string Keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline const ::std::string& keys(int index) const;
  inline ::std::string* mutable_keys(int index);
  inline void set_keys(int index, const ::std::string& value);
  inline void set_keys(int index, const char* value);
  inline void set_keys(int index, const char* value, size_t size);
  inline ::std::string* add_keys();
  inline void add_keys(const ::std::string& value);
  inline void add_keys(const char* value);
  inline void add_keys(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();
  
  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageApiGetRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_AssignDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_ShutdownFile_KeyValueStorage_2fKeyValueStorage_2eproto();
  
  void InitAsDefaultInstance();
  static KeyValueStorageApiGetRequest* default_instance_;
};
// -------------------------------------------------------------------

class KeyValueStorageApiGetResponse : public ::google::protobuf::Message {
 public:
  KeyValueStorageApiGetResponse();
  virtual ~KeyValueStorageApiGetResponse();
  
  KeyValueStorageApiGetResponse(const KeyValueStorageApiGetResponse& from);
  
  inline KeyValueStorageApiGetResponse& operator=(const KeyValueStorageApiGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValueStorageApiGetResponse& default_instance();
  
  void Swap(KeyValueStorageApiGetResponse* other);
  
  // implements Message ----------------------------------------------
  
  KeyValueStorageApiGetResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValueStorageApiGetResponse& from);
  void MergeFrom(const KeyValueStorageApiGetResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageEntry Entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry& entries(int index) const;
  inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* mutable_entries(int index);
  inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >*
      mutable_entries();
  
  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageApiGetResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry > entries_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_AssignDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_ShutdownFile_KeyValueStorage_2fKeyValueStorage_2eproto();
  
  void InitAsDefaultInstance();
  static KeyValueStorageApiGetResponse* default_instance_;
};
// -------------------------------------------------------------------

class KeyValueStorageApiPutRequest : public ::google::protobuf::Message {
 public:
  KeyValueStorageApiPutRequest();
  virtual ~KeyValueStorageApiPutRequest();
  
  KeyValueStorageApiPutRequest(const KeyValueStorageApiPutRequest& from);
  
  inline KeyValueStorageApiPutRequest& operator=(const KeyValueStorageApiPutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValueStorageApiPutRequest& default_instance();
  
  void Swap(KeyValueStorageApiPutRequest* other);
  
  // implements Message ----------------------------------------------
  
  KeyValueStorageApiPutRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValueStorageApiPutRequest& from);
  void MergeFrom(const KeyValueStorageApiPutRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageEntry Entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry& entries(int index) const;
  inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* mutable_entries(int index);
  inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >*
      mutable_entries();
  
  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageApiPutRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry > entries_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_AssignDesc_KeyValueStorage_2fKeyValueStorage_2eproto();
  friend void protobuf_ShutdownFile_KeyValueStorage_2fKeyValueStorage_2eproto();
  
  void InitAsDefaultInstance();
  static KeyValueStorageApiPutRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// KeyValueStorageEntry

// required string Key = 1;
inline bool KeyValueStorageEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValueStorageEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValueStorageEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValueStorageEntry::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& KeyValueStorageEntry::key() const {
  return *key_;
}
inline void KeyValueStorageEntry::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void KeyValueStorageEntry::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void KeyValueStorageEntry::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KeyValueStorageEntry::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* KeyValueStorageEntry::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string Value = 2;
inline bool KeyValueStorageEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValueStorageEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValueStorageEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValueStorageEntry::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& KeyValueStorageEntry::value() const {
  return *value_;
}
inline void KeyValueStorageEntry::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void KeyValueStorageEntry::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void KeyValueStorageEntry::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KeyValueStorageEntry::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* KeyValueStorageEntry::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// KeyValueStorageApiGetRequest

// repeated string Keys = 1;
inline int KeyValueStorageApiGetRequest::keys_size() const {
  return keys_.size();
}
inline void KeyValueStorageApiGetRequest::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& KeyValueStorageApiGetRequest::keys(int index) const {
  return keys_.Get(index);
}
inline ::std::string* KeyValueStorageApiGetRequest::mutable_keys(int index) {
  return keys_.Mutable(index);
}
inline void KeyValueStorageApiGetRequest::set_keys(int index, const ::std::string& value) {
  keys_.Mutable(index)->assign(value);
}
inline void KeyValueStorageApiGetRequest::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
}
inline void KeyValueStorageApiGetRequest::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KeyValueStorageApiGetRequest::add_keys() {
  return keys_.Add();
}
inline void KeyValueStorageApiGetRequest::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
}
inline void KeyValueStorageApiGetRequest::add_keys(const char* value) {
  keys_.Add()->assign(value);
}
inline void KeyValueStorageApiGetRequest::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
KeyValueStorageApiGetRequest::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
KeyValueStorageApiGetRequest::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// KeyValueStorageApiGetResponse

// repeated .Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageEntry Entries = 1;
inline int KeyValueStorageApiGetResponse::entries_size() const {
  return entries_.size();
}
inline void KeyValueStorageApiGetResponse::clear_entries() {
  entries_.Clear();
}
inline const ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry& KeyValueStorageApiGetResponse::entries(int index) const {
  return entries_.Get(index);
}
inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* KeyValueStorageApiGetResponse::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* KeyValueStorageApiGetResponse::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >&
KeyValueStorageApiGetResponse::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >*
KeyValueStorageApiGetResponse::mutable_entries() {
  return &entries_;
}

// -------------------------------------------------------------------

// KeyValueStorageApiPutRequest

// repeated .Diadoc.Api.Proto.KeyValueStorage.KeyValueStorageEntry Entries = 1;
inline int KeyValueStorageApiPutRequest::entries_size() const {
  return entries_.size();
}
inline void KeyValueStorageApiPutRequest::clear_entries() {
  entries_.Clear();
}
inline const ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry& KeyValueStorageApiPutRequest::entries(int index) const {
  return entries_.Get(index);
}
inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* KeyValueStorageApiPutRequest::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry* KeyValueStorageApiPutRequest::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >&
KeyValueStorageApiPutRequest::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::KeyValueStorage::KeyValueStorageEntry >*
KeyValueStorageApiPutRequest::mutable_entries() {
  return &entries_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace KeyValueStorage
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KeyValueStorage_2fKeyValueStorage_2eproto__INCLUDED
